{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0","program":"/Users/annamouland/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","secp256k1","--edition=2018","/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=ff42bb7f99b7f4d7","-C","extra-filename=-ff42bb7f99b7f4d7","--out-dir","/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps","-L","dependency=/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps","--extern","secp256k1_sys=/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps/libsecp256k1_sys-3c275517f0c6b4f9.rmeta","--cap-lints","allow","-L","native=/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/build/secp256k1-sys-c42808ad40f64bd2/out","--error-format=json","--sysroot","/Users/annamouland/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps/libsecp256k1-ff42bb7f99b7f4d7.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[8789741242979361493,0]},"crate_root":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src","external_crates":[{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","num":18,"id":{"name":"secp256k1_sys","disambiguator":[12129694215531205075,0]}}],"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":502,"byte_end":45043,"line_start":16,"line_end":1117,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":55024,"byte_end":55025,"line_start":10,"line_end":10,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":41}},{"kind":"Use","ref_id":{"krate":0,"index":1252},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186394,"byte_end":186402,"line_start":8,"line_end":8,"column_start":20,"column_end":28},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":558}},{"kind":"Use","ref_id":{"krate":0,"index":1244},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":168837,"byte_end":168856,"line_start":17,"line_end":17,"column_start":31,"column_end":50},"alias_span":null,"name":"SerializedSignature","value":"","parent":{"krate":0,"index":516}},{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8194,"byte_end":8207,"line_start":194,"line_end":194,"column_start":9,"column_end":22},"alias_span":null,"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1102},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8237,"byte_end":8246,"line_start":195,"line_end":195,"column_start":22,"column_end":31},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8248,"byte_end":8257,"line_start":195,"line_end":195,"column_start":33,"column_end":42},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8284,"byte_end":8285,"line_start":196,"line_end":196,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Signing, Verification, Context","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8307,"byte_end":8308,"line_start":197,"line_end":197,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1275},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8333,"byte_end":8339,"line_start":198,"line_end":198,"column_start":24,"column_end":30},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":502,"byte_end":45043,"line_start":16,"line_end":1117,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":41},{"krate":0,"index":201},{"krate":0,"index":432},{"krate":0,"index":452},{"krate":0,"index":516},{"krate":0,"index":672},{"krate":0,"index":701},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1358},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1393},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":1395},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":876}],"decl_id":null,"docs":" Rust bindings for Pieter Wuille's secp256k1 library, which is used for\n fast and accurate manipulation of ECDSA signatures on the secp256k1\n curve. Such signatures are used extensively by the Bitcoin network\n and its derivatives.","sig":null,"attributes":[{"value":"/ Rust bindings for Pieter Wuille's secp256k1 library, which is used for","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":502,"byte_end":576,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ fast and accurate manipulation of ECDSA signatures on the secp256k1","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":577,"byte_end":648,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ curve. Such signatures are used extensively by the Bitcoin network","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":649,"byte_end":719,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ and its derivatives.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":720,"byte_end":744,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":745,"byte_end":748,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ To minimize dependencies, some functions are feature-gated. To generate","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":749,"byte_end":824,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ random keys or to re-randomize a context object, compile with the","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":825,"byte_end":894,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ `rand-std` feature. If you are willing to use the `rand-std` feature, we","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":895,"byte_end":971,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ have enabled an additional defense-in-depth sidechannel protection for","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":972,"byte_end":1046,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ our context objects, which re-blinds certain operations on secret key","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1047,"byte_end":1120,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ data. To de/serialize objects with serde, compile with \"serde\".","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1121,"byte_end":1188,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ **Important**: `serde` encoding is **not** the same as consensus","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1189,"byte_end":1257,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ encoding!","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1258,"byte_end":1271,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1272,"byte_end":1275,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Where possible, the bindings use the Rust type system to ensure that","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1276,"byte_end":1348,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ API usage errors are impossible. For example, the library uses context","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1349,"byte_end":1423,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ objects that contain precomputation tables which are created on object","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1424,"byte_end":1498,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ construction. Since this is a slow operation (10+ milliseconds, vs ~50","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1499,"byte_end":1573,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ microseconds for typical crypto operations, on a 2.70 Ghz i7-6820HQ)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1574,"byte_end":1646,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ the tables are optional, giving a performance boost for users who only","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1647,"byte_end":1721,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ care about signing, only care about verification, or only care about","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1722,"byte_end":1794,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ parsing. In the upstream library, if you attempt to sign a message using","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1795,"byte_end":1871,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ a context that does not support this, it will trigger an assertion","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1872,"byte_end":1942,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ failure and terminate the program. In `rust-secp256k1`, this is caught","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":1943,"byte_end":2017,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ at compile-time; in fact, it is impossible to compile code that will","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2018,"byte_end":2090,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ trigger any assertion failures in the upstream library.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2091,"byte_end":2150,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2151,"byte_end":2154,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2155,"byte_end":2166,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature=\"rand-std\", feature=\"bitcoin_hashes\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2167,"byte_end":2249,"line_start":44,"line_end":44,"column_start":1,"column_end":83}},{"value":"/ use secp256k1::rand::rngs::OsRng;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2250,"byte_end":2287,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ use secp256k1::{Secp256k1, Message};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2288,"byte_end":2328,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ use secp256k1::hashes::sha256;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2329,"byte_end":2363,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2364,"byte_end":2367,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2368,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/ let (secret_key, public_key) = secp.generate_keypair(&mut OsRng);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2401,"byte_end":2470,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/ let message = Message::from_hashed_data::<sha256::Hash>(\"Hello World!\".as_bytes());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2471,"byte_end":2558,"line_start":51,"line_end":51,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2559,"byte_end":2562,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let sig = secp.sign_ecdsa(&message, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2563,"byte_end":2616,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/ assert!(secp.verify_ecdsa(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2617,"byte_end":2685,"line_start":54,"line_end":54,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2686,"byte_end":2693,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2694,"byte_end":2701,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2702,"byte_end":2705,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the \"global-context\" feature is enabled you have access to an alternate API.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2706,"byte_end":2789,"line_start":58,"line_end":58,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2790,"byte_end":2793,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2794,"byte_end":2805,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature=\"global-context\", feature = \"std\", feature=\"rand-std\", features = \"bitcoin_hashes\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2806,"byte_end":2917,"line_start":61,"line_end":61,"column_start":1,"column_end":112}},{"value":"/ use secp256k1::rand::thread_rng;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2918,"byte_end":2954,"line_start":62,"line_end":62,"column_start":1,"column_end":37}},{"value":"/ use secp256k1::{generate_keypair, Message};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":2955,"byte_end":3002,"line_start":63,"line_end":63,"column_start":1,"column_end":48}},{"value":"/ use secp256k1::hashes::sha256;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3003,"byte_end":3037,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3038,"byte_end":3041,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ let (secret_key, public_key) = generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3042,"byte_end":3113,"line_start":66,"line_end":66,"column_start":1,"column_end":72}},{"value":"/ let message = Message::from_hashed_data::<sha256::Hash>(\"Hello World!\".as_bytes());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3114,"byte_end":3201,"line_start":67,"line_end":67,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3202,"byte_end":3205,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let sig = secret_key.sign_ecdsa(&message, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3206,"byte_end":3265,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/ assert!(sig.verify(&message, &public_key).is_ok());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3266,"byte_end":3321,"line_start":70,"line_end":70,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3322,"byte_end":3329,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3330,"byte_end":3337,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3338,"byte_end":3341,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The above code requires `rust-secp256k1` to be compiled with the `rand-std` and `bitcoin_hashes`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3342,"byte_end":3442,"line_start":74,"line_end":74,"column_start":1,"column_end":101}},{"value":"/ feature enabled, to get access to [`generate_keypair`](struct.Secp256k1.html#method.generate_keypair)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3443,"byte_end":3548,"line_start":75,"line_end":75,"column_start":1,"column_end":106}},{"value":"/ Alternately, keys and messages can be parsed from slices, like","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3549,"byte_end":3615,"line_start":76,"line_end":76,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3616,"byte_end":3619,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3620,"byte_end":3631,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(any(feature = \"alloc\", features = \"std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3632,"byte_end":3688,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/ use secp256k1::{Secp256k1, Message, SecretKey, PublicKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3689,"byte_end":3751,"line_start":80,"line_end":80,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3752,"byte_end":3755,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3756,"byte_end":3788,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/ let secret_key = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3789,"byte_end":3884,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3885,"byte_end":3953,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/ // This is unsafe unless the supplied byte slice is the output of a cryptographic hash function.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":3954,"byte_end":4054,"line_start":85,"line_end":85,"column_start":1,"column_end":101}},{"value":"/ // See the above example for how to use this library together with `bitcoin_hashes`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4055,"byte_end":4143,"line_start":86,"line_end":86,"column_start":1,"column_end":89}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4144,"byte_end":4214,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4215,"byte_end":4218,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ let sig = secp.sign_ecdsa(&message, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4219,"byte_end":4272,"line_start":89,"line_end":89,"column_start":1,"column_end":54}},{"value":"/ assert!(secp.verify_ecdsa(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4273,"byte_end":4341,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4342,"byte_end":4349,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4350,"byte_end":4357,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4358,"byte_end":4361,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ Users who only want to verify signatures can use a cheaper context, like so:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4362,"byte_end":4442,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4443,"byte_end":4446,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4447,"byte_end":4458,"line_start":96,"line_end":96,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(any(feature = \"alloc\", feature = \"std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4459,"byte_end":4514,"line_start":97,"line_end":97,"column_start":1,"column_end":56}},{"value":"/ use secp256k1::{Secp256k1, Message, ecdsa, PublicKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4515,"byte_end":4573,"line_start":98,"line_end":98,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4574,"byte_end":4577,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::verification_only();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4578,"byte_end":4624,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4625,"byte_end":4628,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ let public_key = PublicKey::from_slice(&[","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4629,"byte_end":4674,"line_start":102,"line_end":102,"column_start":1,"column_end":46}},{"value":"/     0x02,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4675,"byte_end":4688,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     0xc6, 0x6e, 0x7d, 0x89, 0x66, 0xb5, 0xc5, 0x55,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4689,"byte_end":4744,"line_start":104,"line_end":104,"column_start":1,"column_end":56}},{"value":"/     0xaf, 0x58, 0x05, 0x98, 0x9d, 0xa9, 0xfb, 0xf8,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4745,"byte_end":4800,"line_start":105,"line_end":105,"column_start":1,"column_end":56}},{"value":"/     0xdb, 0x95, 0xe1, 0x56, 0x31, 0xce, 0x35, 0x8c,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4801,"byte_end":4856,"line_start":106,"line_end":106,"column_start":1,"column_end":56}},{"value":"/     0x3a, 0x17, 0x10, 0xc9, 0x62, 0x67, 0x90, 0x63,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4857,"byte_end":4912,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"public keys must be 33 or 65 bytes, serialized according to SEC 2\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4913,"byte_end":4996,"line_start":108,"line_end":108,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":4997,"byte_end":5000,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let message = Message::from_slice(&[","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5001,"byte_end":5041,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/     0xaa, 0xdf, 0x7d, 0xe7, 0x82, 0x03, 0x4f, 0xbe,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5042,"byte_end":5097,"line_start":111,"line_end":111,"column_start":1,"column_end":56}},{"value":"/     0x3d, 0x3d, 0xb2, 0xcb, 0x13, 0xc0, 0xcd, 0x91,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5098,"byte_end":5153,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/     0xbf, 0x41, 0xcb, 0x08, 0xfa, 0xc7, 0xbd, 0x61,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5154,"byte_end":5209,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/     0xd5, 0x44, 0x53, 0xcf, 0x6e, 0x82, 0xb4, 0x50,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5210,"byte_end":5265,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"messages must be 32 bytes and are expected to be hashes\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5266,"byte_end":5339,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5340,"byte_end":5343,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ let sig = ecdsa::Signature::from_compact(&[","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5344,"byte_end":5391,"line_start":117,"line_end":117,"column_start":1,"column_end":48}},{"value":"/     0xdc, 0x4d, 0xc2, 0x64, 0xa9, 0xfe, 0xf1, 0x7a,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5392,"byte_end":5447,"line_start":118,"line_end":118,"column_start":1,"column_end":56}},{"value":"/     0x3f, 0x25, 0x34, 0x49, 0xcf, 0x8c, 0x39, 0x7a,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5448,"byte_end":5503,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/     0xb6, 0xf1, 0x6f, 0xb3, 0xd6, 0x3d, 0x86, 0x94,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5504,"byte_end":5559,"line_start":120,"line_end":120,"column_start":1,"column_end":56}},{"value":"/     0x0b, 0x55, 0x86, 0x82, 0x3d, 0xfd, 0x02, 0xae,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5560,"byte_end":5615,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/     0x3b, 0x46, 0x1b, 0xb4, 0x33, 0x6b, 0x5e, 0xcb,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5616,"byte_end":5671,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/     0xae, 0xfd, 0x66, 0x27, 0xaa, 0x92, 0x2e, 0xfc,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5672,"byte_end":5727,"line_start":123,"line_end":123,"column_start":1,"column_end":56}},{"value":"/     0x04, 0x8f, 0xec, 0x0c, 0x88, 0x1c, 0x10, 0xc4,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5728,"byte_end":5783,"line_start":124,"line_end":124,"column_start":1,"column_end":56}},{"value":"/     0xc9, 0x42, 0x8f, 0xca, 0x69, 0xc1, 0x32, 0xa2,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5784,"byte_end":5839,"line_start":125,"line_end":125,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"compact signatures are 64 bytes; DER signatures are 68-72 bytes\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5840,"byte_end":5921,"line_start":126,"line_end":126,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5922,"byte_end":5925,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(not(fuzzing))]","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5926,"byte_end":5952,"line_start":128,"line_end":128,"column_start":1,"column_end":27}},{"value":"/ assert!(secp.verify_ecdsa(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":5953,"byte_end":6021,"line_start":129,"line_end":129,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6022,"byte_end":6029,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6030,"byte_end":6037,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6038,"byte_end":6041,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Observe that the same code using, say [`signing_only`](struct.Secp256k1.html#method.signing_only)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6042,"byte_end":6143,"line_start":133,"line_end":133,"column_start":1,"column_end":102}},{"value":"/ to generate a context would simply not compile.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6144,"byte_end":6195,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6196,"byte_end":6199,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ## Crate features/optional dependencies","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6200,"byte_end":6243,"line_start":136,"line_end":136,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6244,"byte_end":6247,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This crate provides the following opt-in Cargo features:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6248,"byte_end":6308,"line_start":138,"line_end":138,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6309,"byte_end":6312,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ * `std` - use standard Rust library, enabled by default.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6313,"byte_end":6373,"line_start":140,"line_end":140,"column_start":1,"column_end":61}},{"value":"/ * `alloc` - use the `alloc` standard Rust library to provide heap allocations.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6374,"byte_end":6456,"line_start":141,"line_end":141,"column_start":1,"column_end":83}},{"value":"/ * `rand` - use `rand` library to provide random generator (e.g. to generate keys).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6457,"byte_end":6543,"line_start":142,"line_end":142,"column_start":1,"column_end":87}},{"value":"/ * `rand-std` - use `rand` library with its `std` feature enabled. (Implies `rand`.)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6544,"byte_end":6631,"line_start":143,"line_end":143,"column_start":1,"column_end":88}},{"value":"/ * `recovery` - enable functions that can compute the public key from signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6632,"byte_end":6715,"line_start":144,"line_end":144,"column_start":1,"column_end":84}},{"value":"/ * `lowmemory` - optimize the library for low-memory environments.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6716,"byte_end":6785,"line_start":145,"line_end":145,"column_start":1,"column_end":70}},{"value":"/ * `global-context` - enable use of global secp256k1 context (implies `std`).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6786,"byte_end":6866,"line_start":146,"line_end":146,"column_start":1,"column_end":81}},{"value":"/ * `serde` - implements serialization and deserialization for types in this crate using `serde`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6867,"byte_end":6966,"line_start":147,"line_end":147,"column_start":1,"column_end":100}},{"value":"/           **Important**: `serde` encoding is **not** the same as consensus encoding!","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":6967,"byte_end":7055,"line_start":148,"line_end":148,"column_start":1,"column_end":89}},{"value":"/ * `bitcoin_hashes` - enables interaction with the `bitcoin-hashes` crate (e.g. conversions).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7056,"byte_end":7152,"line_start":149,"line_end":149,"column_start":1,"column_end":97}},{"value":"deny(non_upper_case_globals, non_camel_case_types, non_snake_case)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7176,"byte_end":7246,"line_start":152,"line_end":152,"column_start":1,"column_end":71}},{"value":"warn(missing_docs, missing_copy_implementations,\nmissing_debug_implementations)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7247,"byte_end":7330,"line_start":153,"line_end":153,"column_start":1,"column_end":84}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7332,"byte_end":7369,"line_start":155,"line_end":155,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50175,"byte_end":50188,"line_start":86,"line_end":86,"column_start":12,"column_end":25},"name":"DisplaySecret","qualname":"::secret::DisplaySecret","value":"DisplaySecret {  }","parent":null,"children":[{"krate":0,"index":881}],"decl_id":null,"docs":" Helper struct for safely printing secrets (like [`SecretKey`] value).\n Formats the explicit byte value of the secret kept inside the type as a\n little-endian hexadecimal string using the provided formatter.","sig":null,"attributes":[{"value":"/ Helper struct for safely printing secrets (like [`SecretKey`] value).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":49581,"byte_end":49654,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ Formats the explicit byte value of the secret kept inside the type as a","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":49655,"byte_end":49730,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ little-endian hexadecimal string using the provided formatter.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":49731,"byte_end":49797,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":49798,"byte_end":49801,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Secrets should not implement neither [`Debug`] and [`Display`] traits directly,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":49802,"byte_end":49885,"line_start":79,"line_end":79,"column_start":1,"column_end":84}},{"value":"/ and instead provide `fn display_secret<'a>(&'a self) -> DisplaySecret<'a>`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":49886,"byte_end":49964,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ function to be used in different display contexts (see \"examples\" below).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":49965,"byte_end":50042,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50043,"byte_end":50046,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ [`Display`]: fmt::Display","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50047,"byte_end":50076,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/ [`Debug`]: fmt::Debug","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50077,"byte_end":50102,"line_start":84,"line_end":84,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51873,"byte_end":51887,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"display_secret","qualname":"<SecretKey>::display_secret","value":"pub fn display_secret(&Self) -> DisplaySecret","parent":null,"children":[],"decl_id":null,"docs":" Formats the explicit byte value of the secret key kept inside the type as a\n little-endian hexadecimal string using the provided formatter.","sig":null,"attributes":[{"value":"/ Formats the explicit byte value of the secret key kept inside the type as a","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50814,"byte_end":50893,"line_start":111,"line_end":111,"column_start":5,"column_end":84}},{"value":"/ little-endian hexadecimal string using the provided formatter.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50898,"byte_end":50964,"line_start":112,"line_end":112,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50969,"byte_end":50972,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This is the only method that outputs the actual secret key value, and, thus,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50977,"byte_end":51057,"line_start":114,"line_end":114,"column_start":5,"column_end":85}},{"value":"/ should be used with extreme caution.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51062,"byte_end":51102,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51107,"byte_end":51110,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51115,"byte_end":51129,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51134,"byte_end":51137,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51142,"byte_end":51149,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51154,"byte_end":51185,"line_start":120,"line_end":120,"column_start":5,"column_end":36}},{"value":"/ let key = secp256k1::ONE_KEY;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51190,"byte_end":51223,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51228,"byte_end":51231,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ // Normal debug hides value (`Display` is not implemented for `SecretKey`).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51236,"byte_end":51315,"line_start":123,"line_end":123,"column_start":5,"column_end":84}},{"value":"/ // E.g., `format!(\"{:?}\", key)` prints \"SecretKey(#2518682f7819fb2d)\".","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51320,"byte_end":51394,"line_start":124,"line_end":124,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51399,"byte_end":51402,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ // Here we explicitly display the secret value:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51407,"byte_end":51458,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51463,"byte_end":51478,"line_start":127,"line_end":127,"column_start":5,"column_end":20}},{"value":"/     \"0000000000000000000000000000000000000000000000000000000000000001\",","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51483,"byte_end":51558,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     format!(\"{}\", key.display_secret())","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51563,"byte_end":51606,"line_start":129,"line_end":129,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51611,"byte_end":51617,"line_start":130,"line_end":130,"column_start":5,"column_end":11}},{"value":"/ // Also, we can explicitly display with `Debug`:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51622,"byte_end":51674,"line_start":131,"line_end":131,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51679,"byte_end":51694,"line_start":132,"line_end":132,"column_start":5,"column_end":20}},{"value":"/     format!(\"{:?}\", key.display_secret()),","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51699,"byte_end":51745,"line_start":133,"line_end":133,"column_start":5,"column_end":51}},{"value":"/     format!(\"DisplaySecret(\\\"{}\\\")\", key.display_secret())","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51750,"byte_end":51812,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51817,"byte_end":51823,"line_start":135,"line_end":135,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51828,"byte_end":51835,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51840,"byte_end":51847,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51852,"byte_end":51861,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53067,"byte_end":53081,"line_start":175,"line_end":175,"column_start":12,"column_end":26},"name":"display_secret","qualname":"<KeyPair>::display_secret","value":"pub fn display_secret(&Self) -> DisplaySecret","parent":null,"children":[],"decl_id":null,"docs":" Formats the explicit byte value of the secret key kept inside the type as a\n little-endian hexadecimal string using the provided formatter.","sig":null,"attributes":[{"value":"/ Formats the explicit byte value of the secret key kept inside the type as a","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51996,"byte_end":52075,"line_start":145,"line_end":145,"column_start":5,"column_end":84}},{"value":"/ little-endian hexadecimal string using the provided formatter.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52080,"byte_end":52146,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52151,"byte_end":52154,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is the only method that outputs the actual secret key value, and, thus,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52159,"byte_end":52239,"line_start":148,"line_end":148,"column_start":5,"column_end":85}},{"value":"/ should be used with extreme precaution.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52244,"byte_end":52287,"line_start":149,"line_end":149,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52292,"byte_end":52295,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52300,"byte_end":52313,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52318,"byte_end":52321,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52326,"byte_end":52333,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52338,"byte_end":52369,"line_start":154,"line_end":154,"column_start":5,"column_end":36}},{"value":"/ use secp256k1::ONE_KEY;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52374,"byte_end":52401,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"/ use secp256k1::KeyPair;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52406,"byte_end":52433,"line_start":156,"line_end":156,"column_start":5,"column_end":32}},{"value":"/ use secp256k1::Secp256k1;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52438,"byte_end":52467,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52472,"byte_end":52475,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52480,"byte_end":52512,"line_start":159,"line_end":159,"column_start":5,"column_end":37}},{"value":"/ let key = ONE_KEY;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52517,"byte_end":52539,"line_start":160,"line_end":160,"column_start":5,"column_end":27}},{"value":"/ let key = KeyPair::from_secret_key(&secp, &key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52544,"byte_end":52596,"line_start":161,"line_end":161,"column_start":5,"column_end":57}},{"value":"/ // Here we explicitly display the secret value:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52601,"byte_end":52652,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52657,"byte_end":52672,"line_start":163,"line_end":163,"column_start":5,"column_end":20}},{"value":"/     \"0000000000000000000000000000000000000000000000000000000000000001\",","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52677,"byte_end":52752,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/     format!(\"{}\", key.display_secret())","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52757,"byte_end":52800,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52805,"byte_end":52811,"line_start":166,"line_end":166,"column_start":5,"column_end":11}},{"value":"/ // Also, we can explicitly display with `Debug`:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52816,"byte_end":52868,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52873,"byte_end":52888,"line_start":168,"line_end":168,"column_start":5,"column_end":20}},{"value":"/     format!(\"{:?}\", key.display_secret()),","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52893,"byte_end":52939,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/     format!(\"DisplaySecret(\\\"{}\\\")\", key.display_secret())","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":52944,"byte_end":53006,"line_start":170,"line_end":170,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53011,"byte_end":53017,"line_start":171,"line_end":171,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53022,"byte_end":53029,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53034,"byte_end":53041,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53046,"byte_end":53055,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54635,"byte_end":54649,"line_start":213,"line_end":213,"column_start":12,"column_end":26},"name":"display_secret","qualname":"<SharedSecret>::display_secret","value":"pub fn display_secret(&Self) -> DisplaySecret","parent":null,"children":[],"decl_id":null,"docs":" Formats the explicit byte value of the shared secret kept inside the type as a\n little-endian hexadecimal string using the provided formatter.","sig":null,"attributes":[{"value":"/ Formats the explicit byte value of the shared secret kept inside the type as a","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53195,"byte_end":53277,"line_start":181,"line_end":181,"column_start":5,"column_end":87}},{"value":"/ little-endian hexadecimal string using the provided formatter.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53282,"byte_end":53348,"line_start":182,"line_end":182,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53353,"byte_end":53356,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This is the only method that outputs the actual shared secret value, and, thus,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53361,"byte_end":53444,"line_start":184,"line_end":184,"column_start":5,"column_end":88}},{"value":"/ should be used with extreme caution.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53449,"byte_end":53489,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53494,"byte_end":53497,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53502,"byte_end":53516,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53521,"byte_end":53524,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53529,"byte_end":53536,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(not(fuzzing))]","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53541,"byte_end":53567,"line_start":190,"line_end":190,"column_start":5,"column_end":31}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53572,"byte_end":53603,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ # use std::str::FromStr;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53608,"byte_end":53636,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/ # use secp256k1::{SecretKey, PublicKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53641,"byte_end":53685,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/ use secp256k1::ecdh::SharedSecret;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53690,"byte_end":53728,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53733,"byte_end":53736,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # let pk = PublicKey::from_slice(&[3, 23, 183, 225, 206, 31, 159, 148, 195, 42, 67, 115, 146, 41, 248, 140, 11, 3, 51, 41, 111, 180, 110, 143, 114, 134, 88, 73, 198, 174, 52, 184, 78]).expect(\"hard coded slice should parse correctly\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53741,"byte_end":53980,"line_start":196,"line_end":196,"column_start":5,"column_end":244}},{"value":"/ # let sk = SecretKey::from_str(\"57f0148f94d13095cfda539d0da0d1541304b678d8b36e243980aab4e1b7cead\").unwrap();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53985,"byte_end":54097,"line_start":197,"line_end":197,"column_start":5,"column_end":117}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54102,"byte_end":54105,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let secret = SharedSecret::new(&pk, &sk);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54110,"byte_end":54155,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ // Here we explicitly display the secret value:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54160,"byte_end":54211,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54216,"byte_end":54231,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/     format!(\"{}\", secret.display_secret()),","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54236,"byte_end":54283,"line_start":202,"line_end":202,"column_start":5,"column_end":52}},{"value":"/     \"cf05ae7da039ddce6d56dd57d3000c6dd91c6f1695eae47e05389f11e2467043\"","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54288,"byte_end":54362,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ );","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54367,"byte_end":54373,"line_start":204,"line_end":204,"column_start":5,"column_end":11}},{"value":"/ // Also, we can explicitly display with `Debug`:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54378,"byte_end":54430,"line_start":205,"line_end":205,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54435,"byte_end":54450,"line_start":206,"line_end":206,"column_start":5,"column_end":20}},{"value":"/     format!(\"{:?}\", secret.display_secret()),","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54455,"byte_end":54504,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/     format!(\"DisplaySecret(\\\"{}\\\")\", secret.display_secret())","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54509,"byte_end":54574,"line_start":208,"line_end":208,"column_start":5,"column_end":70}},{"value":"/ );","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54579,"byte_end":54585,"line_start":209,"line_end":209,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54590,"byte_end":54597,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54602,"byte_end":54609,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":54614,"byte_end":54623,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":56943,"byte_end":56950,"line_start":64,"line_end":64,"column_start":18,"column_end":25},"name":"Context","qualname":"::context::Context","value":"Context: private::Sealed","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"decl_id":null,"docs":" A trait for all kinds of contexts that lets you define the exact flags and a function to\n deallocate memory. It isn't possible to implement this for types outside this crate.\n","sig":null,"attributes":[{"value":"/ A trait for all kinds of contexts that lets you define the exact flags and a function to","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":56744,"byte_end":56836,"line_start":62,"line_end":62,"column_start":1,"column_end":93}},{"value":"/ deallocate memory. It isn't possible to implement this for types outside this crate.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":56837,"byte_end":56925,"line_start":63,"line_end":63,"column_start":1,"column_end":89}}]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57008,"byte_end":57013,"line_start":66,"line_end":66,"column_start":11,"column_end":16},"name":"FLAGS","qualname":"::context::Context::FLAGS","value":"c_uint","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" Flags for the ffi.\n","sig":null,"attributes":[{"value":"/ Flags for the ffi.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":56975,"byte_end":56997,"line_start":65,"line_end":65,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57080,"byte_end":57091,"line_start":68,"line_end":68,"column_start":11,"column_end":22},"name":"DESCRIPTION","qualname":"::context::Context::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" A constant description of the context.\n","sig":null,"attributes":[{"value":"/ A constant description of the context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57027,"byte_end":57069,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57194,"byte_end":57204,"line_start":70,"line_end":70,"column_start":15,"column_end":25},"name":"deallocate","qualname":"::context::Context::deallocate","value":"pub unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" A function to deallocate the memory when the context is dropped.\n","sig":null,"attributes":[{"value":"/ A function to deallocate the memory when the context is dropped.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57111,"byte_end":57179,"line_start":69,"line_end":69,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57335,"byte_end":57342,"line_start":74,"line_end":74,"column_start":11,"column_end":18},"name":"Signing","qualname":"::context::Signing","value":"Signing: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for signing.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for signing.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57236,"byte_end":57324,"line_start":73,"line_end":73,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":78},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57460,"byte_end":57472,"line_start":77,"line_end":77,"column_start":11,"column_end":23},"name":"Verification","qualname":"::context::Verification","value":"Verification: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for verification.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for verification.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57356,"byte_end":57449,"line_start":76,"line_end":76,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":902},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57656,"byte_end":57676,"line_start":81,"line_end":81,"column_start":12,"column_end":32},"name":"SignOnlyPreallocated","qualname":"::context::SignOnlyPreallocated","value":"SignOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":904}],"decl_id":null,"docs":" Represents the set of capabilities needed for signing with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing with a user preallocated memory.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57486,"byte_end":57576,"line_start":79,"line_end":79,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57899,"byte_end":57921,"line_start":87,"line_end":87,"column_start":12,"column_end":34},"name":"VerifyOnlyPreallocated","qualname":"::context::VerifyOnlyPreallocated","value":"VerifyOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":936}],"decl_id":null,"docs":" Represents the set of capabilities needed for verification with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification with a user preallocated memory.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57724,"byte_end":57819,"line_start":85,"line_end":85,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58124,"byte_end":58139,"line_start":93,"line_end":93,"column_start":12,"column_end":27},"name":"AllPreallocated","qualname":"::context::AllPreallocated","value":"AllPreallocated {  }","parent":null,"children":[{"krate":0,"index":968}],"decl_id":null,"docs":" Represents the set of all capabilities with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities with a user preallocated memory.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57969,"byte_end":58044,"line_start":91,"line_end":91,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":81},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58233,"byte_end":58239,"line_start":99,"line_end":99,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::context::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":998},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59137,"byte_end":59145,"line_start":126,"line_end":126,"column_start":14,"column_end":22},"name":"SignOnly","qualname":"::context::alloc_only::SignOnly","value":"pub enum SignOnly { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for signing.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58918,"byte_end":58976,"line_start":123,"line_end":123,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59378,"byte_end":59388,"line_start":131,"line_end":131,"column_start":14,"column_end":24},"name":"VerifyOnly","qualname":"::context::alloc_only::VerifyOnly","value":"pub enum VerifyOnly { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for verification.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59154,"byte_end":59217,"line_start":128,"line_end":128,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59601,"byte_end":59604,"line_start":136,"line_end":136,"column_start":14,"column_end":17},"name":"All","qualname":"::context::alloc_only::All","value":"pub enum All { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of all capabilities.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59397,"byte_end":59440,"line_start":133,"line_end":133,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61726,"byte_end":61733,"line_start":192,"line_end":192,"column_start":16,"column_end":23},"name":"gen_new","qualname":"<Secp256k1<C>>::gen_new","value":"pub fn gen_new() -> Secp256k1<C>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context in a generic manner (sign/verify/all).","sig":null,"attributes":[{"value":"/ Lets you create a context in a generic manner (sign/verify/all).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60866,"byte_end":60934,"line_start":175,"line_end":175,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60943,"byte_end":60946,"line_start":176,"line_end":176,"column_start":9,"column_end":12}},{"value":"/ If `rand-std` feature is enabled, context will have been randomized using `thread_rng`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60955,"byte_end":61046,"line_start":177,"line_end":177,"column_start":9,"column_end":100}},{"value":"/ If `rand-std` feature is not enabled please consider randomizing the context as follows:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61055,"byte_end":61147,"line_start":178,"line_end":178,"column_start":9,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61156,"byte_end":61163,"line_start":179,"line_end":179,"column_start":9,"column_end":16}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61172,"byte_end":61230,"line_start":180,"line_end":180,"column_start":9,"column_end":67}},{"value":"/ # use secp256k1::Secp256k1;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61239,"byte_end":61270,"line_start":181,"line_end":181,"column_start":9,"column_end":40}},{"value":"/ # use secp256k1::rand::{thread_rng, RngCore};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61279,"byte_end":61328,"line_start":182,"line_end":182,"column_start":9,"column_end":58}},{"value":"/ let mut ctx = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61337,"byte_end":61372,"line_start":183,"line_end":183,"column_start":9,"column_end":44}},{"value":"/ # let mut rng = thread_rng();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61381,"byte_end":61414,"line_start":184,"line_end":184,"column_start":9,"column_end":42}},{"value":"/ # let mut seed = [0u8; 32];","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61423,"byte_end":61454,"line_start":185,"line_end":185,"column_start":9,"column_end":40}},{"value":"/ # rng.fill_bytes(&mut seed);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61463,"byte_end":61495,"line_start":186,"line_end":186,"column_start":9,"column_end":41}},{"value":"/ // let seed = <32 bytes of random data>","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61504,"byte_end":61547,"line_start":187,"line_end":187,"column_start":9,"column_end":52}},{"value":"/ ctx.seeded_randomize(&seed);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61556,"byte_end":61588,"line_start":188,"line_end":188,"column_start":9,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61597,"byte_end":61604,"line_start":189,"line_end":189,"column_start":9,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61613,"byte_end":61620,"line_start":190,"line_end":190,"column_start":9,"column_end":16}},{"value":"allow(clippy :: let_and_return, unused_mut)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":61667,"byte_end":61708,"line_start":191,"line_end":191,"column_start":47,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62887,"byte_end":62890,"line_start":220,"line_end":220,"column_start":16,"column_end":19},"name":"new","qualname":"<Secp256k1<All>>::new","value":"pub fn new() -> Secp256k1<All>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities.","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62561,"byte_end":62619,"line_start":215,"line_end":215,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62628,"byte_end":62631,"line_start":216,"line_end":216,"column_start":9,"column_end":12}},{"value":"/ If `rand-std` feature is enabled, context will have been randomized using `thread_rng`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62640,"byte_end":62731,"line_start":217,"line_end":217,"column_start":9,"column_end":100}},{"value":"/ If `rand-std` feature is not enabled please consider randomizing the context (see docs","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62740,"byte_end":62830,"line_start":218,"line_end":218,"column_start":9,"column_end":99}},{"value":"/ for `Secp256k1::gen_new()`).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62839,"byte_end":62871,"line_start":219,"line_end":219,"column_start":9,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63340,"byte_end":63352,"line_start":231,"line_end":231,"column_start":16,"column_end":28},"name":"signing_only","qualname":"<Secp256k1<SignOnly>>::signing_only","value":"pub fn signing_only() -> Secp256k1<SignOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing.","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63002,"byte_end":63072,"line_start":226,"line_end":226,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63081,"byte_end":63084,"line_start":227,"line_end":227,"column_start":9,"column_end":12}},{"value":"/ If `rand-std` feature is enabled, context will have been randomized using `thread_rng`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63093,"byte_end":63184,"line_start":228,"line_end":228,"column_start":9,"column_end":100}},{"value":"/ If `rand-std` feature is not enabled please consider randomizing the context (see docs","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63193,"byte_end":63283,"line_start":229,"line_end":229,"column_start":9,"column_end":99}},{"value":"/ for `Secp256k1::gen_new()`).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63292,"byte_end":63324,"line_start":230,"line_end":230,"column_start":9,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63814,"byte_end":63831,"line_start":242,"line_end":242,"column_start":16,"column_end":33},"name":"verification_only","qualname":"<Secp256k1<VerifyOnly>>::verification_only","value":"pub fn verification_only() -> Secp256k1<VerifyOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification.","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63471,"byte_end":63546,"line_start":237,"line_end":237,"column_start":9,"column_end":84}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63555,"byte_end":63558,"line_start":238,"line_end":238,"column_start":9,"column_end":12}},{"value":"/ If `rand-std` feature is enabled, context will have been randomized using `thread_rng`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63567,"byte_end":63658,"line_start":239,"line_end":239,"column_start":9,"column_end":100}},{"value":"/ If `rand-std` feature is not enabled please consider randomizing the context (see docs","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63667,"byte_end":63757,"line_start":240,"line_end":240,"column_start":9,"column_end":99}},{"value":"/ for `Secp256k1::gen_new()`).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63766,"byte_end":63798,"line_start":241,"line_end":241,"column_start":9,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":65768,"byte_end":65788,"line_start":302,"line_end":302,"column_start":12,"column_end":32},"name":"preallocated_gen_new","qualname":"<Secp256k1<C>>::preallocated_gen_new","value":"pub fn preallocated_gen_new(&'buf mut [AlignedType])\n-> Result<Secp256k1<C>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":65665,"byte_end":65756,"line_start":301,"line_end":301,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66539,"byte_end":66555,"line_start":323,"line_end":323,"column_start":12,"column_end":28},"name":"preallocated_new","qualname":"<Secp256k1<AllPreallocated>>::preallocated_new","value":"pub fn preallocated_new(&'buf mut [AlignedType])\n-> Result<Secp256k1<AllPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66470,"byte_end":66527,"line_start":322,"line_end":322,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66807,"byte_end":66823,"line_start":327,"line_end":327,"column_start":12,"column_end":28},"name":"preallocate_size","qualname":"<Secp256k1<AllPreallocated>>::preallocate_size","value":"pub fn preallocate_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context.\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66694,"byte_end":66795,"line_start":326,"line_end":326,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67529,"byte_end":67541,"line_start":342,"line_end":342,"column_start":19,"column_end":31},"name":"from_raw_all","qualname":"<Secp256k1<AllPreallocated>>::from_raw_all","value":"pub unsafe fn from_raw_all(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<AllPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66885,"byte_end":66925,"line_start":331,"line_end":331,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66930,"byte_end":66933,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66938,"byte_end":66950,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66955,"byte_end":67034,"line_start":334,"line_end":334,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67039,"byte_end":67101,"line_start":335,"line_end":335,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67106,"byte_end":67194,"line_start":336,"line_end":336,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67199,"byte_end":67308,"line_start":337,"line_end":337,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67313,"byte_end":67345,"line_start":338,"line_end":338,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67350,"byte_end":67444,"line_start":339,"line_end":339,"column_start":5,"column_end":99}},{"value":"/ * Violating these may lead to Undefined Behavior.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67449,"byte_end":67502,"line_start":340,"line_end":340,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67507,"byte_end":67510,"line_start":341,"line_end":341,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67984,"byte_end":68009,"line_start":353,"line_end":353,"column_start":12,"column_end":37},"name":"preallocated_signing_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocated_signing_only","value":"pub fn preallocated_signing_only(&'buf mut [AlignedType])\n-> Result<Secp256k1<SignOnlyPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing.\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67902,"byte_end":67972,"line_start":352,"line_end":352,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68283,"byte_end":68307,"line_start":359,"line_end":359,"column_start":12,"column_end":36},"name":"preallocate_signing_size","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocate_signing_size","value":"pub fn preallocate_signing_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context.\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68154,"byte_end":68257,"line_start":357,"line_end":357,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68262,"byte_end":68271,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69046,"byte_end":69069,"line_start":374,"line_end":374,"column_start":19,"column_end":42},"name":"from_raw_signining_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::from_raw_signining_only","value":"pub unsafe fn from_raw_signining_only(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<SignOnlyPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68369,"byte_end":68409,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68414,"byte_end":68417,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68422,"byte_end":68434,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68439,"byte_end":68518,"line_start":366,"line_end":366,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68523,"byte_end":68585,"line_start":367,"line_end":367,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68590,"byte_end":68678,"line_start":368,"line_end":368,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68683,"byte_end":68792,"line_start":369,"line_end":369,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68797,"byte_end":68829,"line_start":370,"line_end":370,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68834,"byte_end":68928,"line_start":371,"line_end":371,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":68933,"byte_end":69019,"line_start":372,"line_end":372,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69024,"byte_end":69027,"line_start":373,"line_end":373,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69523,"byte_end":69553,"line_start":385,"line_end":385,"column_start":12,"column_end":42},"name":"preallocated_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocated_verification_only","value":"pub fn preallocated_verification_only(&'buf mut [AlignedType])\n-> Result<Secp256k1<VerifyOnlyPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69437,"byte_end":69511,"line_start":384,"line_end":384,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69829,"byte_end":69858,"line_start":391,"line_end":391,"column_start":12,"column_end":41},"name":"preallocate_verification_size","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocate_verification_size","value":"pub fn preallocate_verification_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context.\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69700,"byte_end":69803,"line_start":389,"line_end":389,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69808,"byte_end":69817,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":70597,"byte_end":70623,"line_start":406,"line_end":406,"column_start":19,"column_end":45},"name":"from_raw_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::from_raw_verification_only","value":"pub unsafe fn from_raw_verification_only(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<VerifyOnlyPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69920,"byte_end":69960,"line_start":395,"line_end":395,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69965,"byte_end":69968,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69973,"byte_end":69985,"line_start":397,"line_end":397,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69990,"byte_end":70069,"line_start":398,"line_end":398,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":70074,"byte_end":70136,"line_start":399,"line_end":399,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":70141,"byte_end":70229,"line_start":400,"line_end":400,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":70234,"byte_end":70343,"line_start":401,"line_end":401,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":70348,"byte_end":70380,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":70385,"byte_end":70479,"line_start":403,"line_end":403,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":70484,"byte_end":70570,"line_start":404,"line_end":404,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":70575,"byte_end":70578,"line_start":405,"line_end":405,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72752,"byte_end":72761,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::key::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret 256-bit key used as `x` in an ECDSA signature.","sig":null,"attributes":[{"value":"/ Secret 256-bit key used as `x` in an ECDSA signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72020,"byte_end":72077,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72078,"byte_end":72081,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Serde support","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72082,"byte_end":72101,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72102,"byte_end":72105,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Implements de/serialization with the `serde` feature enabled. We treat the byte value as a tuple","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72106,"byte_end":72206,"line_start":41,"line_end":41,"column_start":1,"column_end":101}},{"value":"/ of 32 `u8`s for non-human-readable formats. This representation is optimal for for some formats","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72207,"byte_end":72306,"line_start":42,"line_end":42,"column_start":1,"column_end":100}},{"value":"/ (e.g. [`bincode`]) however other formats may be less optimal (e.g. [`cbor`]).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72307,"byte_end":72388,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72389,"byte_end":72392,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72393,"byte_end":72407,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72408,"byte_end":72411,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72412,"byte_end":72428,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72429,"byte_end":72432,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72433,"byte_end":72440,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72441,"byte_end":72500,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"/ use secp256k1::{rand, Secp256k1, SecretKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72501,"byte_end":72549,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72550,"byte_end":72553,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72554,"byte_end":72586,"line_start":53,"line_end":53,"column_start":1,"column_end":33}},{"value":"/ let secret_key = SecretKey::new(&mut rand::thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72587,"byte_end":72648,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72649,"byte_end":72656,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72657,"byte_end":72664,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ [`bincode`]: https://docs.rs/bincode","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72665,"byte_end":72705,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"/ [`cbor`]: https://docs.rs/cbor","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72706,"byte_end":72740,"line_start":58,"line_end":58,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":271},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73293,"byte_end":73300,"line_start":75,"line_end":75,"column_start":11,"column_end":18},"name":"ONE_KEY","qualname":"::key::ONE_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key.\n","sig":null,"attributes":[{"value":"/ The number 1 encoded as a secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73241,"byte_end":73282,"line_start":74,"line_end":74,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74512,"byte_end":74521,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::key::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 public key, used for verification of signatures.","sig":null,"attributes":[{"value":"/ A Secp256k1 public key, used for verification of signatures.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73550,"byte_end":73614,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73615,"byte_end":73618,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Serde support","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73619,"byte_end":73638,"line_start":82,"line_end":82,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73639,"byte_end":73642,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Implements de/serialization with the `serde` feature enabled. We treat the byte value as a tuple","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73643,"byte_end":73743,"line_start":84,"line_end":84,"column_start":1,"column_end":101}},{"value":"/ of 33 `u8`s for non-human-readable formats. This representation is optimal for for some formats","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73744,"byte_end":73843,"line_start":85,"line_end":85,"column_start":1,"column_end":100}},{"value":"/ (e.g. [`bincode`]) however other formats may be less optimal (e.g. [`cbor`]).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73844,"byte_end":73925,"line_start":86,"line_end":86,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73926,"byte_end":73929,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73930,"byte_end":73944,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73945,"byte_end":73948,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73949,"byte_end":73965,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73966,"byte_end":73969,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73970,"byte_end":73977,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(any(feature =  \"alloc\", feature = \"std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":73978,"byte_end":74034,"line_start":93,"line_end":93,"column_start":1,"column_end":57}},{"value":"/ use secp256k1::{SecretKey, Secp256k1, PublicKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74035,"byte_end":74088,"line_start":94,"line_end":94,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74089,"byte_end":74092,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74093,"byte_end":74125,"line_start":96,"line_end":96,"column_start":1,"column_end":33}},{"value":"/ let secret_key = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74126,"byte_end":74221,"line_start":97,"line_end":97,"column_start":1,"column_end":96}},{"value":"/ let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74222,"byte_end":74290,"line_start":98,"line_end":98,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74291,"byte_end":74298,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74299,"byte_end":74306,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ [`bincode`]: https://docs.rs/bincode","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74307,"byte_end":74347,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"/ [`cbor`]: https://docs.rs/cbor","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74348,"byte_end":74382,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"repr(transparent)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74480,"byte_end":74500,"line_start":105,"line_end":105,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76743,"byte_end":76753,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SecretKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SECRET_KEY_SIZE`-byte slice to a secret key.","sig":null,"attributes":[{"value":"/ Converts a `SECRET_KEY_SIZE`-byte slice to a secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76472,"byte_end":76532,"line_start":177,"line_end":177,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76537,"byte_end":76540,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76545,"byte_end":76559,"line_start":179,"line_end":179,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76564,"byte_end":76567,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76572,"byte_end":76579,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ use secp256k1::SecretKey;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76584,"byte_end":76613,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/ let sk = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76618,"byte_end":76705,"line_start":183,"line_end":183,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76710,"byte_end":76717,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":76722,"byte_end":76731,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77791,"byte_end":77803,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"from_keypair","qualname":"<SecretKey>::from_keypair","value":"pub fn from_keypair(&KeyPair) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new secret key using data from BIP-340 [`KeyPair`].","sig":null,"attributes":[{"value":"/ Creates a new secret key using data from BIP-340 [`KeyPair`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77328,"byte_end":77393,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77398,"byte_end":77401,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77406,"byte_end":77420,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77425,"byte_end":77428,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77433,"byte_end":77440,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77445,"byte_end":77504,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{rand, Secp256k1, SecretKey, KeyPair};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77509,"byte_end":77566,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77571,"byte_end":77574,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77579,"byte_end":77611,"line_start":212,"line_end":212,"column_start":5,"column_end":37}},{"value":"/ let key_pair = KeyPair::new(&secp, &mut rand::thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77616,"byte_end":77680,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/ let secret_key = SecretKey::from_keypair(&key_pair);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77685,"byte_end":77741,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77746,"byte_end":77753,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77758,"byte_end":77765,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":77770,"byte_end":77779,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78240,"byte_end":78252,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"secret_bytes","qualname":"<SecretKey>::secret_bytes","value":"pub fn secret_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the secret key as a byte value.\n","sig":null,"attributes":[{"value":"/ Returns the secret key as a byte value.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78171,"byte_end":78214,"line_start":231,"line_end":231,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78219,"byte_end":78228,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78442,"byte_end":78455,"line_start":240,"line_end":240,"column_start":12,"column_end":25},"name":"negate_assign","qualname":"<SecretKey>::negate_assign","value":"pub fn negate_assign(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negates the secret key.\n","sig":null,"attributes":[{"value":"/ Negates the secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78324,"byte_end":78351,"line_start":237,"line_end":237,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78356,"byte_end":78365,"line_start":238,"line_end":238,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.23.0\", note = \"Use negate instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78370,"byte_end":78430,"line_start":239,"line_end":239,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78624,"byte_end":78630,"line_start":247,"line_end":247,"column_start":12,"column_end":18},"name":"negate","qualname":"<SecretKey>::negate","value":"pub fn negate(Self) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":" Negates the secret key.\n","sig":null,"attributes":[{"value":"/ Negates the secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78510,"byte_end":78537,"line_start":244,"line_end":244,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78542,"byte_end":78551,"line_start":245,"line_end":245,"column_start":5,"column_end":14}},{"value":"must_use = \"you forgot to use the negated secret key\"","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78556,"byte_end":78612,"line_start":246,"line_end":246,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79152,"byte_end":79162,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"add_assign","qualname":"<SecretKey>::add_assign","value":"pub fn add_assign(&mut Self, &Scalar) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds one secret key to another, modulo the curve order.","sig":null,"attributes":[{"value":"/ Adds one secret key to another, modulo the curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78902,"byte_end":78961,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78966,"byte_end":78969,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78974,"byte_end":78986,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78991,"byte_end":78994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":78999,"byte_end":79058,"line_start":262,"line_end":262,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79063,"byte_end":79072,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.23.0\", note = \"Use add_tweak instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79077,"byte_end":79140,"line_start":264,"line_end":264,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79470,"byte_end":79479,"line_start":276,"line_end":276,"column_start":12,"column_end":21},"name":"add_tweak","qualname":"<SecretKey>::add_tweak","value":"pub fn add_tweak(Self, &Scalar) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweaks a [`SecretKey`] by adding `tweak` modulo the curve order.","sig":null,"attributes":[{"value":"/ Tweaks a [`SecretKey`] by adding `tweak` modulo the curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79279,"byte_end":79347,"line_start":270,"line_end":270,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79352,"byte_end":79355,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79360,"byte_end":79372,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79377,"byte_end":79380,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79385,"byte_end":79444,"line_start":274,"line_end":274,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79449,"byte_end":79458,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80108,"byte_end":80118,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<SecretKey>::mul_assign","value":"pub fn mul_assign(&mut Self, &Scalar) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one secret key by another, modulo the curve order. Will\n return an error if the resulting key would be invalid.\n","sig":null,"attributes":[{"value":"/ Multiplies one secret key by another, modulo the curve order. Will","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79881,"byte_end":79951,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/ return an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":79956,"byte_end":80014,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80019,"byte_end":80028,"line_start":293,"line_end":293,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.23.0\", note = \"Use mul_tweak instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80033,"byte_end":80096,"line_start":294,"line_end":294,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80434,"byte_end":80443,"line_start":306,"line_end":306,"column_start":12,"column_end":21},"name":"mul_tweak","qualname":"<SecretKey>::mul_tweak","value":"pub fn mul_tweak(Self, &Scalar) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweaks a [`SecretKey`] by multiplying by `tweak` modulo the curve order.","sig":null,"attributes":[{"value":"/ Tweaks a [`SecretKey`] by multiplying by `tweak` modulo the curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80235,"byte_end":80311,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80316,"byte_end":80319,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80324,"byte_end":80336,"line_start":302,"line_end":302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80341,"byte_end":80344,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80349,"byte_end":80408,"line_start":304,"line_end":304,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":80413,"byte_end":80422,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81312,"byte_end":81319,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"keypair","qualname":"<SecretKey>::keypair","value":"pub fn keypair<C: Signing>(&Self, &Secp256k1<C>) -> KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`KeyPair`] for this [`SecretKey`].","sig":null,"attributes":[{"value":"/ Returns the [`KeyPair`] for this [`SecretKey`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81161,"byte_end":81212,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81217,"byte_end":81220,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to using [`KeyPair::from_secret_key`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81225,"byte_end":81286,"line_start":331,"line_end":331,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81291,"byte_end":81300,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81584,"byte_end":81594,"line_start":341,"line_end":341,"column_start":12,"column_end":22},"name":"public_key","qualname":"<SecretKey>::public_key","value":"pub fn public_key<C: Signing>(&Self, &Secp256k1<C>) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`PublicKey`] for this [`SecretKey`].","sig":null,"attributes":[{"value":"/ Returns the [`PublicKey`] for this [`SecretKey`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81429,"byte_end":81482,"line_start":337,"line_end":337,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81487,"byte_end":81490,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to using [`PublicKey::from_secret_key`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81495,"byte_end":81558,"line_start":339,"line_end":339,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81563,"byte_end":81572,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81904,"byte_end":81921,"line_start":349,"line_end":349,"column_start":12,"column_end":29},"name":"x_only_public_key","qualname":"<SecretKey>::x_only_public_key","value":"pub fn x_only_public_key<C: Signing>(&Self, &Secp256k1<C>)\n-> (XOnlyPublicKey, Parity)","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`XOnlyPublicKey`] (and it's [`Parity`]) for this [`SecretKey`].","sig":null,"attributes":[{"value":"/ Returns the [`XOnlyPublicKey`] (and it's [`Parity`]) for this [`SecretKey`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81708,"byte_end":81788,"line_start":345,"line_end":345,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81793,"byte_end":81796,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `XOnlyPublicKey::from_keypair(self.keypair(secp))`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81801,"byte_end":81878,"line_start":347,"line_end":347,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":81883,"byte_end":81892,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83483,"byte_end":83489,"line_start":393,"line_end":393,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83389,"byte_end":83457,"line_start":391,"line_end":391,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83462,"byte_end":83471,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83647,"byte_end":83657,"line_start":399,"line_end":399,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<PublicKey>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83551,"byte_end":83621,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83626,"byte_end":83635,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":84184,"byte_end":84199,"line_start":417,"line_end":417,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"pub fn from_secret_key<C: Signing>(&Secp256k1<C>, &SecretKey) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new public key from a [`SecretKey`].","sig":null,"attributes":[{"value":"/ Creates a new public key from a [`SecretKey`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83725,"byte_end":83775,"line_start":403,"line_end":403,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83780,"byte_end":83783,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83788,"byte_end":83802,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83807,"byte_end":83810,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83815,"byte_end":83822,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83827,"byte_end":83886,"line_start":408,"line_end":408,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{rand, Secp256k1, SecretKey, PublicKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83891,"byte_end":83950,"line_start":409,"line_end":409,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83955,"byte_end":83958,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83963,"byte_end":83995,"line_start":411,"line_end":411,"column_start":5,"column_end":37}},{"value":"/ let secret_key = SecretKey::new(&mut rand::thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":84000,"byte_end":84061,"line_start":412,"line_end":412,"column_start":5,"column_end":66}},{"value":"/ let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":84066,"byte_end":84134,"line_start":413,"line_end":413,"column_start":5,"column_end":73}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":84139,"byte_end":84146,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":84151,"byte_end":84158,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":84163,"byte_end":84172,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85068,"byte_end":85078,"line_start":438,"line_end":438,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a public key directly from a slice.\n","sig":null,"attributes":[{"value":"/ Creates a public key directly from a slice.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":84995,"byte_end":85042,"line_start":436,"line_end":436,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85047,"byte_end":85056,"line_start":437,"line_end":437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":86082,"byte_end":86094,"line_start":471,"line_end":471,"column_start":12,"column_end":24},"name":"from_keypair","qualname":"<PublicKey>::from_keypair","value":"pub fn from_keypair(&KeyPair) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new compressed public key using data from BIP-340 [`KeyPair`].","sig":null,"attributes":[{"value":"/ Creates a new compressed public key using data from BIP-340 [`KeyPair`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85608,"byte_end":85684,"line_start":457,"line_end":457,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85689,"byte_end":85692,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85697,"byte_end":85711,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85716,"byte_end":85719,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85724,"byte_end":85731,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85736,"byte_end":85795,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{rand, Secp256k1, PublicKey, KeyPair};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85800,"byte_end":85857,"line_start":463,"line_end":463,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85862,"byte_end":85865,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85870,"byte_end":85902,"line_start":465,"line_end":465,"column_start":5,"column_end":37}},{"value":"/ let key_pair = KeyPair::new(&secp, &mut rand::thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85907,"byte_end":85971,"line_start":466,"line_end":466,"column_start":5,"column_end":69}},{"value":"/ let public_key = PublicKey::from_keypair(&key_pair);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":85976,"byte_end":86032,"line_start":467,"line_end":467,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":86037,"byte_end":86044,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":86049,"byte_end":86056,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":86061,"byte_end":86070,"line_start":470,"line_end":470,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":86548,"byte_end":86570,"line_start":485,"line_end":485,"column_start":12,"column_end":34},"name":"from_x_only_public_key","qualname":"<PublicKey>::from_x_only_public_key","value":"pub fn from_x_only_public_key(XOnlyPublicKey, Parity) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`PublicKey`] using the key material from `pk` combined with the `parity`.\n","sig":null,"attributes":[{"value":"/ Creates a [`PublicKey`] using the key material from `pk` combined with the `parity`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":86448,"byte_end":86536,"line_start":484,"line_end":484,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":87172,"byte_end":87181,"line_start":501,"line_end":501,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the key as a byte-encoded pair of values. In compressed form the y-coordinate is\n represented by only a single bit, as x determines it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":86975,"byte_end":86984,"line_start":498,"line_end":498,"column_start":5,"column_end":14}},{"value":"/ Serializes the key as a byte-encoded pair of values. In compressed form the y-coordinate is","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":86989,"byte_end":87084,"line_start":499,"line_end":499,"column_start":5,"column_end":100}},{"value":"/ represented by only a single bit, as x determines it up to one bit.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":87089,"byte_end":87160,"line_start":500,"line_end":500,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":87485,"byte_end":87507,"line_start":509,"line_end":509,"column_start":12,"column_end":34},"name":"serialize_uncompressed","qualname":"<PublicKey>::serialize_uncompressed","value":"pub fn serialize_uncompressed(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the key as a byte-encoded pair of values, in uncompressed form.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":87381,"byte_end":87390,"line_start":507,"line_end":507,"column_start":5,"column_end":14}},{"value":"/ Serializes the key as a byte-encoded pair of values, in uncompressed form.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":87395,"byte_end":87473,"line_start":508,"line_end":508,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88345,"byte_end":88358,"line_start":534,"line_end":534,"column_start":12,"column_end":25},"name":"negate_assign","qualname":"<PublicKey>::negate_assign","value":"pub fn negate_assign<C: Verification>(&mut Self, &Secp256k1<C>)","parent":null,"children":[],"decl_id":null,"docs":" Negates the public key in place.\n","sig":null,"attributes":[{"value":"/ Negates the public key in place.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88218,"byte_end":88254,"line_start":531,"line_end":531,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88259,"byte_end":88268,"line_start":532,"line_end":532,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.23.0\", note = \"Use negate instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88273,"byte_end":88333,"line_start":533,"line_end":533,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88569,"byte_end":88575,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"negate","qualname":"<PublicKey>::negate","value":"pub fn negate<C: Verification>(Self, &Secp256k1<C>) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Negates the public key.\n","sig":null,"attributes":[{"value":"/ Negates the public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88455,"byte_end":88482,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88487,"byte_end":88496,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"must_use = \"you forgot to use the negated public key\"","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88501,"byte_end":88557,"line_start":540,"line_end":540,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89041,"byte_end":89055,"line_start":556,"line_end":556,"column_start":12,"column_end":26},"name":"add_exp_assign","qualname":"<PublicKey>::add_exp_assign","value":"pub fn add_exp_assign<C: Verification>(&mut Self, &Secp256k1<C>, &Scalar)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds `other * G` to `self` in place.","sig":null,"attributes":[{"value":"/ Adds `other * G` to `self` in place.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88806,"byte_end":88846,"line_start":549,"line_end":549,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88851,"byte_end":88854,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88859,"byte_end":88871,"line_start":551,"line_end":551,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88876,"byte_end":88879,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88884,"byte_end":88943,"line_start":553,"line_end":553,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88948,"byte_end":88957,"line_start":554,"line_end":554,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.23.0\", note = \"Use add_exp_tweak instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":88962,"byte_end":89029,"line_start":555,"line_end":555,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89445,"byte_end":89458,"line_start":571,"line_end":571,"column_start":12,"column_end":25},"name":"add_exp_tweak","qualname":"<PublicKey>::add_exp_tweak","value":"pub fn add_exp_tweak<C: Verification>(Self, &Secp256k1<C>, &Scalar)\n-> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweaks a [`PublicKey`] by adding `tweak * G` modulo the curve order.","sig":null,"attributes":[{"value":"/ Tweaks a [`PublicKey`] by adding `tweak * G` modulo the curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89250,"byte_end":89322,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89327,"byte_end":89330,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89335,"byte_end":89347,"line_start":567,"line_end":567,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89352,"byte_end":89355,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89360,"byte_end":89419,"line_start":569,"line_end":569,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89424,"byte_end":89433,"line_start":570,"line_end":570,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90071,"byte_end":90081,"line_start":592,"line_end":592,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<PublicKey>::mul_assign","value":"pub fn mul_assign<C: Verification>(&mut Self, &Secp256k1<C>, &Scalar)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Muliplies the public key in place by the scalar `other`.","sig":null,"attributes":[{"value":"/ Muliplies the public key in place by the scalar `other`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89820,"byte_end":89880,"line_start":585,"line_end":585,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89885,"byte_end":89888,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89893,"byte_end":89905,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89910,"byte_end":89913,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89918,"byte_end":89977,"line_start":589,"line_end":589,"column_start":5,"column_end":64}},{"value":"deprecated(since = \"0.23.0\", note = \"Use mul_tweak instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":89982,"byte_end":90045,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90050,"byte_end":90059,"line_start":591,"line_end":591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90472,"byte_end":90481,"line_start":607,"line_end":607,"column_start":12,"column_end":21},"name":"mul_tweak","qualname":"<PublicKey>::mul_tweak","value":"pub fn mul_tweak<C: Verification>(Self, &Secp256k1<C>, &Scalar)\n-> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweaks a [`PublicKey`] by multiplying by `tweak` modulo the curve order.","sig":null,"attributes":[{"value":"/ Tweaks a [`PublicKey`] by multiplying by `tweak` modulo the curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90273,"byte_end":90349,"line_start":601,"line_end":601,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90354,"byte_end":90357,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90362,"byte_end":90374,"line_start":603,"line_end":603,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90379,"byte_end":90382,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90387,"byte_end":90446,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90451,"byte_end":90460,"line_start":606,"line_end":606,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91535,"byte_end":91542,"line_start":640,"line_end":640,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"pub fn combine(&Self, &PublicKey) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds a second key to this one, returning the sum.","sig":null,"attributes":[{"value":"/ Adds a second key to this one, returning the sum.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90844,"byte_end":90897,"line_start":621,"line_end":621,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90902,"byte_end":90905,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90910,"byte_end":90922,"line_start":623,"line_end":623,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90927,"byte_end":90930,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ If the result would be the point at infinity, i.e. adding this point to its own negation.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":90935,"byte_end":91028,"line_start":625,"line_end":625,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91033,"byte_end":91036,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91041,"byte_end":91055,"line_start":627,"line_end":627,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91060,"byte_end":91063,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91068,"byte_end":91075,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"rand-std\", any(feature =  \"alloc\", feature = \"std\")))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91080,"byte_end":91163,"line_start":630,"line_end":630,"column_start":5,"column_end":88}},{"value":"/ use secp256k1::{rand, Secp256k1};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91168,"byte_end":91205,"line_start":631,"line_end":631,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91210,"byte_end":91213,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91218,"byte_end":91250,"line_start":633,"line_end":633,"column_start":5,"column_end":37}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91255,"byte_end":91292,"line_start":634,"line_end":634,"column_start":5,"column_end":42}},{"value":"/ let (_, pk1) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91297,"byte_end":91348,"line_start":635,"line_end":635,"column_start":5,"column_end":56}},{"value":"/ let (_, pk2) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91353,"byte_end":91404,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/ let sum = pk1.combine(&pk2).expect(\"It's improbable to fail for 2 random public keys\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91409,"byte_end":91500,"line_start":637,"line_end":637,"column_start":5,"column_end":96}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91505,"byte_end":91512,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91517,"byte_end":91523,"line_start":639,"line_end":639,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92607,"byte_end":92619,"line_start":667,"line_end":667,"column_start":12,"column_end":24},"name":"combine_keys","qualname":"<PublicKey>::combine_keys","value":"pub fn combine_keys(&[&PublicKey]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds the keys in the provided slice together, returning the sum.","sig":null,"attributes":[{"value":"/ Adds the keys in the provided slice together, returning the sum.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91658,"byte_end":91726,"line_start":644,"line_end":644,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91731,"byte_end":91734,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91739,"byte_end":91751,"line_start":646,"line_end":646,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91756,"byte_end":91759,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ Errors under any of the following conditions:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91764,"byte_end":91813,"line_start":648,"line_end":648,"column_start":5,"column_end":54}},{"value":"/ - The result would be the point at infinity, i.e. adding a point to its own negation.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91818,"byte_end":91907,"line_start":649,"line_end":649,"column_start":5,"column_end":94}},{"value":"/ - The provided slice is empty.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91912,"byte_end":91946,"line_start":650,"line_end":650,"column_start":5,"column_end":39}},{"value":"/ - The number of elements in the provided slice is greater than `i32::MAX`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":91951,"byte_end":92029,"line_start":651,"line_end":651,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92034,"byte_end":92037,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92042,"byte_end":92056,"line_start":653,"line_end":653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92061,"byte_end":92064,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92069,"byte_end":92076,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92081,"byte_end":92140,"line_start":656,"line_end":656,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{rand, Secp256k1, PublicKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92145,"byte_end":92193,"line_start":657,"line_end":657,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92198,"byte_end":92201,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92206,"byte_end":92238,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92243,"byte_end":92280,"line_start":660,"line_end":660,"column_start":5,"column_end":42}},{"value":"/ let (_, pk1) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92285,"byte_end":92336,"line_start":661,"line_end":661,"column_start":5,"column_end":56}},{"value":"/ let (_, pk2) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92341,"byte_end":92392,"line_start":662,"line_end":662,"column_start":5,"column_end":56}},{"value":"/ let (_, pk3) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92397,"byte_end":92448,"line_start":663,"line_end":663,"column_start":5,"column_end":56}},{"value":"/ let sum = PublicKey::combine_keys(&[&pk1, &pk2, &pk3]).expect(\"It's improbable to fail for 3 random public keys\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92453,"byte_end":92571,"line_start":664,"line_end":664,"column_start":5,"column_end":123}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92576,"byte_end":92583,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":92588,"byte_end":92595,"line_start":666,"line_end":666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":93504,"byte_end":93521,"line_start":695,"line_end":695,"column_start":12,"column_end":29},"name":"x_only_public_key","qualname":"<PublicKey>::x_only_public_key","value":"pub fn x_only_public_key(&Self) -> (XOnlyPublicKey, Parity)","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`XOnlyPublicKey`] (and it's [`Parity`]) for this [`PublicKey`].\n","sig":null,"attributes":[{"value":"/ Returns the [`XOnlyPublicKey`] (and it's [`Parity`]) for this [`PublicKey`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":93398,"byte_end":93478,"line_start":693,"line_end":693,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":93483,"byte_end":93492,"line_start":694,"line_end":694,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97195,"byte_end":97202,"line_start":809,"line_end":809,"column_start":12,"column_end":19},"name":"KeyPair","qualname":"::key::KeyPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque data structure that holds a keypair consisting of a secret and a public key.","sig":null,"attributes":[{"value":"/ Opaque data structure that holds a keypair consisting of a secret and a public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96180,"byte_end":96267,"line_start":784,"line_end":784,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96268,"byte_end":96271,"line_start":785,"line_end":785,"column_start":1,"column_end":4}},{"value":"/ # Serde support","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96272,"byte_end":96291,"line_start":786,"line_end":786,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96292,"byte_end":96295,"line_start":787,"line_end":787,"column_start":1,"column_end":4}},{"value":"/ Implements de/serialization with the `serde` and_`global-context` features enabled. Serializes","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96296,"byte_end":96394,"line_start":788,"line_end":788,"column_start":1,"column_end":99}},{"value":"/ the secret bytes only. We treat the byte value as a tuple of 32 `u8`s for non-human-readable","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96395,"byte_end":96491,"line_start":789,"line_end":789,"column_start":1,"column_end":97}},{"value":"/ formats. This representation is optimal for for some formats (e.g. [`bincode`]) however other","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96492,"byte_end":96589,"line_start":790,"line_end":790,"column_start":1,"column_end":98}},{"value":"/ formats may be less optimal (e.g. [`cbor`]). For human-readable formats we use a hex string.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96590,"byte_end":96686,"line_start":791,"line_end":791,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96687,"byte_end":96690,"line_start":792,"line_end":792,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96691,"byte_end":96705,"line_start":793,"line_end":793,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96706,"byte_end":96709,"line_start":794,"line_end":794,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96710,"byte_end":96726,"line_start":795,"line_end":795,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96727,"byte_end":96730,"line_start":796,"line_end":796,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96731,"byte_end":96738,"line_start":797,"line_end":797,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96739,"byte_end":96798,"line_start":798,"line_end":798,"column_start":1,"column_end":60}},{"value":"/ use secp256k1::{rand, KeyPair, Secp256k1};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96799,"byte_end":96845,"line_start":799,"line_end":799,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96846,"byte_end":96849,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96850,"byte_end":96882,"line_start":801,"line_end":801,"column_start":1,"column_end":33}},{"value":"/ let (secret_key, public_key) = secp.generate_keypair(&mut rand::thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96883,"byte_end":96965,"line_start":802,"line_end":802,"column_start":1,"column_end":83}},{"value":"/ let key_pair = KeyPair::from_secret_key(&secp, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":96966,"byte_end":97030,"line_start":803,"line_end":803,"column_start":1,"column_end":65}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97031,"byte_end":97038,"line_start":804,"line_end":804,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97039,"byte_end":97046,"line_start":805,"line_end":805,"column_start":1,"column_end":8}},{"value":"/ [`bincode`]: https://docs.rs/bincode","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97047,"byte_end":97087,"line_start":806,"line_end":806,"column_start":1,"column_end":41}},{"value":"/ [`cbor`]: https://docs.rs/cbor","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97088,"byte_end":97122,"line_start":807,"line_end":807,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97363,"byte_end":97369,"line_start":815,"line_end":815,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<KeyPair>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97269,"byte_end":97337,"line_start":813,"line_end":813,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97342,"byte_end":97351,"line_start":814,"line_end":814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97525,"byte_end":97535,"line_start":821,"line_end":821,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<KeyPair>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97429,"byte_end":97499,"line_start":819,"line_end":819,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97504,"byte_end":97513,"line_start":820,"line_end":820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97690,"byte_end":97705,"line_start":827,"line_end":827,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<KeyPair>::from_secret_key","value":"pub fn from_secret_key<C: Signing>(&Secp256k1<C>, &SecretKey) -> KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`KeyPair`] directly from a Secp256k1 secret key.\n","sig":null,"attributes":[{"value":"/ Creates a [`KeyPair`] directly from a Secp256k1 secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97601,"byte_end":97664,"line_start":825,"line_end":825,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97669,"byte_end":97678,"line_start":826,"line_end":826,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98430,"byte_end":98447,"line_start":848,"line_end":848,"column_start":12,"column_end":29},"name":"from_seckey_slice","qualname":"<KeyPair>::from_seckey_slice","value":"pub fn from_seckey_slice<C: Signing>(&Secp256k1<C>, &[u8])\n-> Result<KeyPair, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`KeyPair`] directly from a secret key slice.","sig":null,"attributes":[{"value":"/ Creates a [`KeyPair`] directly from a secret key slice.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98143,"byte_end":98202,"line_start":841,"line_end":841,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98207,"byte_end":98210,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98215,"byte_end":98227,"line_start":843,"line_end":843,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98232,"byte_end":98235,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ [`Error::InvalidSecretKey`] if the provided data has an incorrect length, exceeds Secp256k1","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98240,"byte_end":98335,"line_start":845,"line_end":845,"column_start":5,"column_end":100}},{"value":"/ field `p` value or the corresponding public key is not even.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98340,"byte_end":98404,"line_start":846,"line_end":846,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98409,"byte_end":98418,"line_start":847,"line_end":847,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":99186,"byte_end":99201,"line_start":872,"line_end":872,"column_start":12,"column_end":27},"name":"from_seckey_str","qualname":"<KeyPair>::from_seckey_str","value":"pub fn from_seckey_str<C: Signing>(&Secp256k1<C>, &str)\n-> Result<KeyPair, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`KeyPair`] directly from a secret key string.","sig":null,"attributes":[{"value":"/ Creates a [`KeyPair`] directly from a secret key string.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":98962,"byte_end":99022,"line_start":866,"line_end":866,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":99027,"byte_end":99030,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":99035,"byte_end":99047,"line_start":868,"line_end":868,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":99052,"byte_end":99055,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ [`Error::InvalidSecretKey`] if corresponding public key for the provided secret key is not even.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":99060,"byte_end":99160,"line_start":870,"line_end":870,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":99165,"byte_end":99174,"line_start":871,"line_end":871,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":101494,"byte_end":101506,"line_start":934,"line_end":934,"column_start":12,"column_end":24},"name":"secret_bytes","qualname":"<KeyPair>::secret_bytes","value":"pub fn secret_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the secret bytes for this key pair.\n","sig":null,"attributes":[{"value":"/ Returns the secret bytes for this key pair.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":101421,"byte_end":101468,"line_start":932,"line_end":932,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":101473,"byte_end":101482,"line_start":933,"line_end":933,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":101824,"byte_end":101840,"line_start":942,"line_end":942,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<KeyPair>::tweak_add_assign","value":"pub fn tweak_add_assign<C: Verification>(&mut Self, &Secp256k1<C>, &Scalar)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweaks a keypair by adding the given tweak to the secret key and updating the public key\n accordingly.\n","sig":null,"attributes":[{"value":"/ Tweaks a keypair by adding the given tweak to the secret key and updating the public key","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":101611,"byte_end":101703,"line_start":938,"line_end":938,"column_start":5,"column_end":97}},{"value":"/ accordingly.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":101708,"byte_end":101724,"line_start":939,"line_end":939,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":101729,"byte_end":101738,"line_start":940,"line_end":940,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.23.0\", note = \"Use add_xonly_tweak instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":101743,"byte_end":101812,"line_start":941,"line_end":941,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102945,"byte_end":102960,"line_start":976,"line_end":976,"column_start":12,"column_end":27},"name":"add_xonly_tweak","qualname":"<KeyPair>::add_xonly_tweak","value":"pub fn add_xonly_tweak<C: Verification>(Self, &Secp256k1<C>, &Scalar)\n-> Result<KeyPair, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweaks a keypair by first converting the public key to an xonly key and tweaking it.","sig":null,"attributes":[{"value":"/ Tweaks a keypair by first converting the public key to an xonly key and tweaking it.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102038,"byte_end":102126,"line_start":951,"line_end":951,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102131,"byte_end":102134,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102139,"byte_end":102151,"line_start":953,"line_end":953,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102156,"byte_end":102159,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102164,"byte_end":102223,"line_start":955,"line_end":955,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102228,"byte_end":102231,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ NB: Will not error if the tweaked public key has an odd value and can't be used for","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102236,"byte_end":102323,"line_start":957,"line_end":957,"column_start":5,"column_end":92}},{"value":"/     BIP 340-342 purposes.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102328,"byte_end":102357,"line_start":958,"line_end":958,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102362,"byte_end":102365,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102370,"byte_end":102384,"line_start":960,"line_end":960,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102389,"byte_end":102392,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102397,"byte_end":102404,"line_start":962,"line_end":962,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102409,"byte_end":102468,"line_start":963,"line_end":963,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{Secp256k1, KeyPair, Scalar};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102473,"byte_end":102521,"line_start":964,"line_end":964,"column_start":5,"column_end":53}},{"value":"/ use secp256k1::rand::{RngCore, thread_rng};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102526,"byte_end":102573,"line_start":965,"line_end":965,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102578,"byte_end":102581,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102586,"byte_end":102618,"line_start":967,"line_end":967,"column_start":5,"column_end":37}},{"value":"/ let tweak = Scalar::random();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102623,"byte_end":102656,"line_start":968,"line_end":968,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102661,"byte_end":102664,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ let mut key_pair = KeyPair::new(&secp, &mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102669,"byte_end":102731,"line_start":970,"line_end":970,"column_start":5,"column_end":67}},{"value":"/ let tweaked = key_pair.add_xonly_tweak(&secp, &tweak).expect(\"Improbable to fail with a randomly generated tweak\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102736,"byte_end":102855,"line_start":971,"line_end":971,"column_start":5,"column_end":124}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102860,"byte_end":102867,"line_start":972,"line_end":972,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102872,"byte_end":102879,"line_start":973,"line_end":973,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":102924,"byte_end":102933,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103549,"byte_end":103559,"line_start":999,"line_end":999,"column_start":12,"column_end":22},"name":"secret_key","qualname":"<KeyPair>::secret_key","value":"pub fn secret_key(&Self) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`SecretKey`] for this [`KeyPair`].","sig":null,"attributes":[{"value":"/ Returns the [`SecretKey`] for this [`KeyPair`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103399,"byte_end":103450,"line_start":995,"line_end":995,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103455,"byte_end":103458,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to using [`SecretKey::from_keypair`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103463,"byte_end":103523,"line_start":997,"line_end":997,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103528,"byte_end":103537,"line_start":998,"line_end":998,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103781,"byte_end":103791,"line_start":1007,"line_end":1007,"column_start":12,"column_end":22},"name":"public_key","qualname":"<KeyPair>::public_key","value":"pub fn public_key(&Self) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`PublicKey`] for this [`KeyPair`].","sig":null,"attributes":[{"value":"/ Returns the [`PublicKey`] for this [`KeyPair`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103631,"byte_end":103682,"line_start":1003,"line_end":1003,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103687,"byte_end":103690,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to using [`PublicKey::from_keypair`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103695,"byte_end":103755,"line_start":1005,"line_end":1005,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103760,"byte_end":103769,"line_start":1006,"line_end":1006,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104045,"byte_end":104062,"line_start":1015,"line_end":1015,"column_start":12,"column_end":29},"name":"x_only_public_key","qualname":"<KeyPair>::x_only_public_key","value":"pub fn x_only_public_key(&Self) -> (XOnlyPublicKey, Parity)","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`XOnlyPublicKey`] (and it's [`Parity`]) for this [`KeyPair`].","sig":null,"attributes":[{"value":"/ Returns the [`XOnlyPublicKey`] (and it's [`Parity`]) for this [`KeyPair`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103863,"byte_end":103941,"line_start":1011,"line_end":1011,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103946,"byte_end":103949,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to using [`XOnlyPublicKey::from_keypair`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":103954,"byte_end":104019,"line_start":1013,"line_end":1013,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104024,"byte_end":104033,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107807,"byte_end":107821,"line_start":1130,"line_end":1130,"column_start":12,"column_end":26},"name":"XOnlyPublicKey","qualname":"::key::XOnlyPublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" An x-only public key, used for verification of Schnorr signatures and serialized according to BIP-340.","sig":null,"attributes":[{"value":"/ An x-only public key, used for verification of Schnorr signatures and serialized according to BIP-340.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":106884,"byte_end":106990,"line_start":1106,"line_end":1106,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":106991,"byte_end":106994,"line_start":1107,"line_end":1107,"column_start":1,"column_end":4}},{"value":"/ # Serde support","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":106995,"byte_end":107014,"line_start":1108,"line_end":1108,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107015,"byte_end":107018,"line_start":1109,"line_end":1109,"column_start":1,"column_end":4}},{"value":"/ Implements de/serialization with the `serde` feature enabled. We treat the byte value as a tuple","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107019,"byte_end":107119,"line_start":1110,"line_end":1110,"column_start":1,"column_end":101}},{"value":"/ of 32 `u8`s for non-human-readable formats. This representation is optimal for for some formats","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107120,"byte_end":107219,"line_start":1111,"line_end":1111,"column_start":1,"column_end":100}},{"value":"/ (e.g. [`bincode`]) however other formats may be less optimal (e.g. [`cbor`]).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107220,"byte_end":107301,"line_start":1112,"line_end":1112,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107302,"byte_end":107305,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107306,"byte_end":107320,"line_start":1114,"line_end":1114,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107321,"byte_end":107324,"line_start":1115,"line_end":1115,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107325,"byte_end":107341,"line_start":1116,"line_end":1116,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107342,"byte_end":107345,"line_start":1117,"line_end":1117,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107346,"byte_end":107353,"line_start":1118,"line_end":1118,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107354,"byte_end":107413,"line_start":1119,"line_end":1119,"column_start":1,"column_end":60}},{"value":"/ use secp256k1::{rand, Secp256k1, KeyPair, XOnlyPublicKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107414,"byte_end":107476,"line_start":1120,"line_end":1120,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107477,"byte_end":107480,"line_start":1121,"line_end":1121,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107481,"byte_end":107513,"line_start":1122,"line_end":1122,"column_start":1,"column_end":33}},{"value":"/ let key_pair = KeyPair::new(&secp, &mut rand::thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107514,"byte_end":107578,"line_start":1123,"line_end":1123,"column_start":1,"column_end":65}},{"value":"/ let xonly = XOnlyPublicKey::from_keypair(&key_pair);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107579,"byte_end":107635,"line_start":1124,"line_end":1124,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107636,"byte_end":107643,"line_start":1125,"line_end":1125,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107644,"byte_end":107651,"line_start":1126,"line_end":1126,"column_start":1,"column_end":8}},{"value":"/ [`bincode`]: https://docs.rs/bincode","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107652,"byte_end":107692,"line_start":1127,"line_end":1127,"column_start":1,"column_end":41}},{"value":"/ [`cbor`]: https://docs.rs/cbor","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107693,"byte_end":107727,"line_start":1128,"line_end":1128,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108793,"byte_end":108799,"line_start":1164,"line_end":1164,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<XOnlyPublicKey>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108699,"byte_end":108767,"line_start":1162,"line_end":1162,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108772,"byte_end":108781,"line_start":1163,"line_end":1163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108962,"byte_end":108972,"line_start":1170,"line_end":1170,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<XOnlyPublicKey>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108866,"byte_end":108936,"line_start":1168,"line_end":1168,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108941,"byte_end":108950,"line_start":1169,"line_end":1169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109142,"byte_end":109154,"line_start":1176,"line_end":1176,"column_start":12,"column_end":24},"name":"from_keypair","qualname":"<XOnlyPublicKey>::from_keypair","value":"pub fn from_keypair(&KeyPair) -> (XOnlyPublicKey, Parity)","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`XOnlyPublicKey`] (and it's [`Parity`]) for `keypair`.\n","sig":null,"attributes":[{"value":"/ Returns the [`XOnlyPublicKey`] (and it's [`Parity`]) for `keypair`.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109045,"byte_end":109116,"line_start":1174,"line_end":1174,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109121,"byte_end":109130,"line_start":1175,"line_end":1175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":110023,"byte_end":110033,"line_start":1200,"line_end":1200,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<XOnlyPublicKey>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<XOnlyPublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr public key directly from a slice.","sig":null,"attributes":[{"value":"/ Creates a Schnorr public key directly from a slice.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109739,"byte_end":109794,"line_start":1193,"line_end":1193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109799,"byte_end":109802,"line_start":1194,"line_end":1194,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109807,"byte_end":109819,"line_start":1195,"line_end":1195,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109824,"byte_end":109827,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Returns [`Error::InvalidPublicKey`] if the length of the data slice is not 32 bytes or the","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109832,"byte_end":109926,"line_start":1197,"line_end":1197,"column_start":5,"column_end":99}},{"value":"/ slice does not represent a valid Secp256k1 point x coordinate.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":109931,"byte_end":109997,"line_start":1198,"line_end":1198,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":110002,"byte_end":110011,"line_start":1199,"line_end":1199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":110722,"byte_end":110731,"line_start":1222,"line_end":1222,"column_start":12,"column_end":21},"name":"serialize","qualname":"<XOnlyPublicKey>::serialize","value":"pub fn serialize(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the key as a byte-encoded x coordinate value (32 bytes).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":110625,"byte_end":110634,"line_start":1220,"line_end":1220,"column_start":5,"column_end":14}},{"value":"/ Serializes the key as a byte-encoded x coordinate value (32 bytes).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":110639,"byte_end":110710,"line_start":1221,"line_end":1221,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111308,"byte_end":111324,"line_start":1238,"line_end":1238,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<XOnlyPublicKey>::tweak_add_assign","value":"pub fn tweak_add_assign<V: Verification>(&mut Self, &Secp256k1<V>, &Scalar)\n-> Result<Parity, Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweaks an x-only PublicKey by adding the generator multiplied with the given tweak to it.\n","sig":null,"attributes":[{"value":"/ Tweaks an x-only PublicKey by adding the generator multiplied with the given tweak to it.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111135,"byte_end":111228,"line_start":1236,"line_end":1236,"column_start":5,"column_end":98}},{"value":"deprecated(since = \"0.23.0\", note = \"Use add_tweak instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111233,"byte_end":111296,"line_start":1237,"line_end":1237,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112628,"byte_end":112637,"line_start":1275,"line_end":1275,"column_start":12,"column_end":21},"name":"add_tweak","qualname":"<XOnlyPublicKey>::add_tweak","value":"pub fn add_tweak<V: Verification>(Self, &Secp256k1<V>, &Scalar)\n-> Result<(XOnlyPublicKey, Parity), Error>","parent":null,"children":[],"decl_id":null,"docs":" Tweaks an [`XOnlyPublicKey`] by adding the generator multiplied with the given tweak to it.","sig":null,"attributes":[{"value":"/ Tweaks an [`XOnlyPublicKey`] by adding the generator multiplied with the given tweak to it.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111565,"byte_end":111660,"line_start":1248,"line_end":1248,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111665,"byte_end":111668,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111673,"byte_end":111686,"line_start":1250,"line_end":1250,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111691,"byte_end":111694,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ The newly tweaked key plus an opaque type representing the parity of the tweaked key, this","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111699,"byte_end":111793,"line_start":1252,"line_end":1252,"column_start":5,"column_end":99}},{"value":"/ should be provided to `tweak_add_check` which can be used to verify a tweak more efficiently","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111798,"byte_end":111894,"line_start":1253,"line_end":1253,"column_start":5,"column_end":101}},{"value":"/ than regenerating it and checking equality.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111899,"byte_end":111946,"line_start":1254,"line_end":1254,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111951,"byte_end":111954,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111959,"byte_end":111971,"line_start":1256,"line_end":1256,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111976,"byte_end":111979,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ If the resulting key would be invalid.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":111984,"byte_end":112026,"line_start":1258,"line_end":1258,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112031,"byte_end":112034,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112039,"byte_end":112053,"line_start":1260,"line_end":1260,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112058,"byte_end":112061,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112066,"byte_end":112073,"line_start":1262,"line_end":1262,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112078,"byte_end":112137,"line_start":1263,"line_end":1263,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{Secp256k1, KeyPair, Scalar, XOnlyPublicKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112142,"byte_end":112206,"line_start":1264,"line_end":1264,"column_start":5,"column_end":69}},{"value":"/ use secp256k1::rand::{RngCore, thread_rng};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112211,"byte_end":112258,"line_start":1265,"line_end":1265,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112263,"byte_end":112266,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112271,"byte_end":112303,"line_start":1267,"line_end":1267,"column_start":5,"column_end":37}},{"value":"/ let tweak = Scalar::random();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112308,"byte_end":112341,"line_start":1268,"line_end":1268,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112346,"byte_end":112349,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ let mut key_pair = KeyPair::new(&secp, &mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112354,"byte_end":112416,"line_start":1270,"line_end":1270,"column_start":5,"column_end":67}},{"value":"/ let (xonly, _parity) = key_pair.x_only_public_key();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112421,"byte_end":112477,"line_start":1271,"line_end":1271,"column_start":5,"column_end":61}},{"value":"/ let tweaked = xonly.add_tweak(&secp, &tweak).expect(\"Improbable to fail with a randomly generated tweak\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112482,"byte_end":112592,"line_start":1272,"line_end":1272,"column_start":5,"column_end":115}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112597,"byte_end":112604,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":112609,"byte_end":112616,"line_start":1274,"line_end":1274,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114904,"byte_end":114919,"line_start":1338,"line_end":1338,"column_start":12,"column_end":27},"name":"tweak_add_check","qualname":"<XOnlyPublicKey>::tweak_add_check","value":"pub fn tweak_add_check<V: Verification>(&Self, &Secp256k1<V>, &Self, Parity,\nScalar) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Verifies that a tweak produced by [`XOnlyPublicKey::tweak_add_assign`] was computed correctly.","sig":null,"attributes":[{"value":"/ Verifies that a tweak produced by [`XOnlyPublicKey::tweak_add_assign`] was computed correctly.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":113557,"byte_end":113655,"line_start":1308,"line_end":1308,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":113660,"byte_end":113663,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ Should be called on the original untweaked key. Takes the tweaked key and output parity from","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":113668,"byte_end":113764,"line_start":1310,"line_end":1310,"column_start":5,"column_end":101}},{"value":"/ [`XOnlyPublicKey::tweak_add_assign`] as input.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":113769,"byte_end":113819,"line_start":1311,"line_end":1311,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":113824,"byte_end":113827,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ Currently this is not much more efficient than just recomputing the tweak and checking","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":113832,"byte_end":113922,"line_start":1313,"line_end":1313,"column_start":5,"column_end":95}},{"value":"/ equality. However, in future this API will support batch verification, which is","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":113927,"byte_end":114010,"line_start":1314,"line_end":1314,"column_start":5,"column_end":88}},{"value":"/ significantly faster, so it is wise to design protocols with this in mind.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114015,"byte_end":114093,"line_start":1315,"line_end":1315,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114098,"byte_end":114101,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114106,"byte_end":114119,"line_start":1317,"line_end":1317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114124,"byte_end":114127,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ True if tweak and check is successful, false otherwise.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114132,"byte_end":114191,"line_start":1319,"line_end":1319,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114196,"byte_end":114199,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114204,"byte_end":114218,"line_start":1321,"line_end":1321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114223,"byte_end":114226,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114231,"byte_end":114238,"line_start":1323,"line_end":1323,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114243,"byte_end":114302,"line_start":1324,"line_end":1324,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{Secp256k1, KeyPair, Scalar};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114307,"byte_end":114355,"line_start":1325,"line_end":1325,"column_start":5,"column_end":53}},{"value":"/ use secp256k1::rand::{thread_rng, RngCore};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114360,"byte_end":114407,"line_start":1326,"line_end":1326,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114412,"byte_end":114415,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114420,"byte_end":114452,"line_start":1328,"line_end":1328,"column_start":5,"column_end":37}},{"value":"/ let tweak = Scalar::random();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114457,"byte_end":114490,"line_start":1329,"line_end":1329,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114495,"byte_end":114498,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ let mut key_pair = KeyPair::new(&secp, &mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114503,"byte_end":114565,"line_start":1331,"line_end":1331,"column_start":5,"column_end":67}},{"value":"/ let (mut public_key, _) = key_pair.x_only_public_key();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114570,"byte_end":114629,"line_start":1332,"line_end":1332,"column_start":5,"column_end":64}},{"value":"/ let original = public_key;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114634,"byte_end":114664,"line_start":1333,"line_end":1333,"column_start":5,"column_end":35}},{"value":"/ let parity = public_key.tweak_add_assign(&secp, &tweak).expect(\"Improbable to fail with a randomly generated tweak\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114669,"byte_end":114790,"line_start":1334,"line_end":1334,"column_start":5,"column_end":126}},{"value":"/ assert!(original.tweak_add_check(&secp, &public_key, parity, tweak));","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114795,"byte_end":114868,"line_start":1335,"line_end":1335,"column_start":5,"column_end":78}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114873,"byte_end":114880,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":114885,"byte_end":114892,"line_start":1337,"line_end":1337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115620,"byte_end":115630,"line_start":1363,"line_end":1363,"column_start":12,"column_end":22},"name":"public_key","qualname":"<XOnlyPublicKey>::public_key","value":"pub fn public_key(&Self, Parity) -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`PublicKey`] for this [`XOnlyPublicKey`].","sig":null,"attributes":[{"value":"/ Returns the [`PublicKey`] for this [`XOnlyPublicKey`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115440,"byte_end":115498,"line_start":1359,"line_end":1359,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115503,"byte_end":115506,"line_start":1360,"line_end":1360,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to using [`PublicKey::from_xonly_and_parity(self, parity)`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115511,"byte_end":115594,"line_start":1361,"line_end":1361,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115599,"byte_end":115608,"line_start":1362,"line_end":1362,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115907,"byte_end":115911,"line_start":1372,"line_end":1372,"column_start":5,"column_end":9},"name":"Even","qualname":"::key::Parity::Even","value":"Parity::Even","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":" Even parity.\n","sig":null,"attributes":[{"value":"/ Even parity.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115886,"byte_end":115902,"line_start":1371,"line_end":1371,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115941,"byte_end":115944,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8},"name":"Odd","qualname":"::key::Parity::Odd","value":"Parity::Odd","parent":{"krate":0,"index":1168},"children":[],"decl_id":null,"docs":" Odd parity.\n","sig":null,"attributes":[{"value":"/ Odd parity.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115921,"byte_end":115936,"line_start":1373,"line_end":1373,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115873,"byte_end":115879,"line_start":1370,"line_end":1370,"column_start":10,"column_end":16},"name":"Parity","qualname":"::key::Parity","value":"pub enum Parity { Even = , Odd = , }","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1172}],"decl_id":null,"docs":" Represents the parity passed between FFI function calls.\n","sig":null,"attributes":[{"value":"/ Represents the parity passed between FFI function calls.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115735,"byte_end":115795,"line_start":1368,"line_end":1368,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116105,"byte_end":116110,"line_start":1381,"line_end":1381,"column_start":12,"column_end":17},"name":"to_u8","qualname":"<Parity>::to_u8","value":"pub fn to_u8(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Converts parity into an integer (byte) value.","sig":null,"attributes":[{"value":"/ Converts parity into an integer (byte) value.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115971,"byte_end":116020,"line_start":1378,"line_end":1378,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116025,"byte_end":116028,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ This returns `0` for even parity and `1` for odd parity.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116033,"byte_end":116093,"line_start":1380,"line_end":1380,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116282,"byte_end":116288,"line_start":1388,"line_end":1388,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Parity>::to_i32","value":"pub fn to_i32(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Converts parity into an integer value.","sig":null,"attributes":[{"value":"/ Converts parity into an integer value.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116155,"byte_end":116197,"line_start":1385,"line_end":1385,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116202,"byte_end":116205,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ This returns `0` for even parity and `1` for odd parity.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116210,"byte_end":116270,"line_start":1387,"line_end":1387,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116529,"byte_end":116536,"line_start":1396,"line_end":1396,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Parity>::from_u8","value":"pub fn from_u8(u8) -> Result<Parity, InvalidParityValue>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`Parity`] from a byte.","sig":null,"attributes":[{"value":"/ Constructs a [`Parity`] from a byte.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116335,"byte_end":116375,"line_start":1392,"line_end":1392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116380,"byte_end":116383,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ The only allowed values are `0` meaning even parity and `1` meaning odd.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116388,"byte_end":116464,"line_start":1394,"line_end":1394,"column_start":5,"column_end":81}},{"value":"/ Other values result in error being returned.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116469,"byte_end":116517,"line_start":1395,"line_end":1395,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116844,"byte_end":116852,"line_start":1404,"line_end":1404,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Parity>::from_i32","value":"pub fn from_i32(i32) -> Result<Parity, InvalidParityValue>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`Parity`] from a signed integer.","sig":null,"attributes":[{"value":"/ Constructs a [`Parity`] from a signed integer.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116640,"byte_end":116690,"line_start":1400,"line_end":1400,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116695,"byte_end":116698,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ The only allowed values are `0` meaning even parity and `1` meaning odd.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116703,"byte_end":116779,"line_start":1402,"line_end":1402,"column_start":5,"column_end":81}},{"value":"/ Other values result in error being returned.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":116784,"byte_end":116832,"line_start":1403,"line_end":1403,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":118619,"byte_end":118637,"line_start":1465,"line_end":1465,"column_start":12,"column_end":30},"name":"InvalidParityValue","qualname":"::key::InvalidParityValue","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned when conversion from an integer to `Parity` fails.\n","sig":null,"attributes":[{"value":"/ Error returned when conversion from an integer to `Parity` fails.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":118268,"byte_end":118337,"line_start":1459,"line_end":1459,"column_start":1,"column_end":70}}]},{"kind":"Mod","id":{"krate":0,"index":432},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450}],"decl_id":null,"docs":" Constants related to the API and the underlying curve.","sig":null,"attributes":[{"value":"/ Constants related to the API and the underlying curve.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":155895,"byte_end":155953,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":155954,"byte_end":155957,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":433},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156007,"byte_end":156019,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"MESSAGE_SIZE","qualname":"::constants::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a message.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a message.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":155959,"byte_end":155996,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":434},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156085,"byte_end":156100,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"SECRET_KEY_SIZE","qualname":"::constants::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a secret key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156034,"byte_end":156074,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":435},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156177,"byte_end":156192,"line_start":26,"line_end":26,"column_start":11,"column_end":26},"name":"PUBLIC_KEY_SIZE","qualname":"::constants::PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a serialized public key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a serialized public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156115,"byte_end":156166,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":436},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156283,"byte_end":156311,"line_start":29,"line_end":29,"column_start":11,"column_end":39},"name":"UNCOMPRESSED_PUBLIC_KEY_SIZE","qualname":"::constants::UNCOMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of an serialized uncompressed public key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of an serialized uncompressed public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156207,"byte_end":156272,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":437},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156373,"byte_end":156391,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"MAX_SIGNATURE_SIZE","qualname":"::constants::MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a signature.\n","sig":null,"attributes":[{"value":"/ The maximum size of a signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156326,"byte_end":156362,"line_start":31,"line_end":31,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":438},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156461,"byte_end":156483,"line_start":35,"line_end":35,"column_start":11,"column_end":33},"name":"COMPACT_SIGNATURE_SIZE","qualname":"::constants::COMPACT_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a compact signature.\n","sig":null,"attributes":[{"value":"/ The maximum size of a compact signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156406,"byte_end":156450,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":439},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156545,"byte_end":156567,"line_start":38,"line_end":38,"column_start":11,"column_end":33},"name":"SCHNORR_SIGNATURE_SIZE","qualname":"::constants::SCHNORR_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ The size of a Schnorr signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156498,"byte_end":156534,"line_start":37,"line_end":37,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":440},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156707,"byte_end":156732,"line_start":42,"line_end":42,"column_start":11,"column_end":36},"name":"SCHNORRSIG_SIGNATURE_SIZE","qualname":"::constants::SCHNORRSIG_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ The size of a Schnorr signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156582,"byte_end":156618,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"deprecated(since = \"0.22.0\", note = \"Use SCHNORR_SIGNATURE_SIZE instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156619,"byte_end":156696,"line_start":41,"line_end":41,"column_start":1,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":441},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156815,"byte_end":156838,"line_start":45,"line_end":45,"column_start":11,"column_end":34},"name":"SCHNORR_PUBLIC_KEY_SIZE","qualname":"::constants::SCHNORR_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a Schnorr public key.\n","sig":null,"attributes":[{"value":"/ The size of a Schnorr public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156767,"byte_end":156804,"line_start":44,"line_end":44,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":442},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156980,"byte_end":157006,"line_start":49,"line_end":49,"column_start":11,"column_end":37},"name":"SCHNORRSIG_PUBLIC_KEY_SIZE","qualname":"::constants::SCHNORRSIG_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a Schnorr public key.\n","sig":null,"attributes":[{"value":"/ The size of a Schnorr public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156853,"byte_end":156890,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"deprecated(since = \"0.22.0\", note = \"Use SCHNORR_PUBLIC_KEY_SIZE instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":156891,"byte_end":156969,"line_start":48,"line_end":48,"column_start":1,"column_end":79}}]},{"kind":"Const","id":{"krate":0,"index":443},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157080,"byte_end":157093,"line_start":52,"line_end":52,"column_start":11,"column_end":24},"name":"KEY_PAIR_SIZE","qualname":"::constants::KEY_PAIR_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a key pair.\n","sig":null,"attributes":[{"value":"/ The size of a key pair.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157042,"byte_end":157069,"line_start":51,"line_end":51,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":444},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157165,"byte_end":157175,"line_start":55,"line_end":55,"column_start":11,"column_end":21},"name":"FIELD_SIZE","qualname":"::constants::FIELD_SIZE","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Prime for the secp256k1 field element.\n","sig":null,"attributes":[{"value":"/ The Prime for the secp256k1 field element.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157108,"byte_end":157154,"line_start":54,"line_end":54,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":446},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157449,"byte_end":157460,"line_start":63,"line_end":63,"column_start":11,"column_end":22},"name":"CURVE_ORDER","qualname":"::constants::CURVE_ORDER","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The order of the secp256k1 curve.\n","sig":null,"attributes":[{"value":"/ The order of the secp256k1 curve.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157401,"byte_end":157438,"line_start":62,"line_end":62,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":448},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157735,"byte_end":157746,"line_start":71,"line_end":71,"column_start":11,"column_end":22},"name":"GENERATOR_X","qualname":"::constants::GENERATOR_X","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The X coordinate of the generator.\n","sig":null,"attributes":[{"value":"/ The X coordinate of the generator.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157686,"byte_end":157724,"line_start":70,"line_end":70,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":450},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":158021,"byte_end":158032,"line_start":79,"line_end":79,"column_start":11,"column_end":22},"name":"GENERATOR_Y","qualname":"::constants::GENERATOR_Y","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Y coordinate of the generator.\n","sig":null,"attributes":[{"value":"/ The Y coordinate of the generator.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/constants.rs","byte_start":157972,"byte_end":158010,"line_start":78,"line_end":78,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":452},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdh","qualname":"::ecdh","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":1215},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":495},{"krate":0,"index":504},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":515}],"decl_id":null,"docs":" Support for shared secret computations.","sig":null,"attributes":[{"value":"/ Support for shared secret computations.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":158735,"byte_end":158778,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":158779,"byte_end":158782,"line_start":16,"line_end":16,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159742,"byte_end":159754,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ecdh::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" Enables two parties to create a shared secret without revealing their own secrets.","sig":null,"attributes":[{"value":"/ Enables two parties to create a shared secret without revealing their own secrets.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159096,"byte_end":159182,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159183,"byte_end":159186,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159187,"byte_end":159201,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159202,"byte_end":159205,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159206,"byte_end":159213,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159214,"byte_end":159272,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ # use secp256k1::Secp256k1;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159273,"byte_end":159304,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/ # use secp256k1::ecdh::SharedSecret;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159305,"byte_end":159345,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ # use secp256k1::rand::thread_rng;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159346,"byte_end":159384,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ let s = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159385,"byte_end":159414,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ let (sk1, pk1) = s.generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159415,"byte_end":159474,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/ let (sk2, pk2) = s.generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159475,"byte_end":159534,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/ let sec1 = SharedSecret::new(&pk2, &sk1);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159535,"byte_end":159580,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/ let sec2 = SharedSecret::new(&pk1, &sk2);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159581,"byte_end":159626,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(sec1, sec2);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159627,"byte_end":159654,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159655,"byte_end":159662,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159930,"byte_end":159933,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"pub fn new(&PublicKey, &SecretKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key.\n","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159843,"byte_end":159904,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159909,"byte_end":159918,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160515,"byte_end":160527,"line_start":69,"line_end":69,"column_start":12,"column_end":24},"name":"secret_bytes","qualname":"<SharedSecret>::secret_bytes","value":"pub fn secret_bytes(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns the shared secret as a byte value.\n","sig":null,"attributes":[{"value":"/ Returns the shared secret as a byte value.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160443,"byte_end":160489,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160494,"byte_end":160503,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160664,"byte_end":160674,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SharedSecret>::from_bytes","value":"pub fn from_bytes([u8; ]) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a shared secret from `bytes` array.\n","sig":null,"attributes":[{"value":"/ Creates a shared secret from `bytes` array.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160591,"byte_end":160638,"line_start":73,"line_end":73,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160643,"byte_end":160652,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160838,"byte_end":160848,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SharedSecret>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<SharedSecret, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a shared secret from `bytes` slice.\n","sig":null,"attributes":[{"value":"/ Creates a shared secret from `bytes` slice.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160765,"byte_end":160812,"line_start":79,"line_end":79,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":160817,"byte_end":160826,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162964,"byte_end":162983,"line_start":146,"line_end":146,"column_start":8,"column_end":27},"name":"shared_secret_point","qualname":"::ecdh::shared_secret_point","value":"pub fn shared_secret_point(&PublicKey, &SecretKey) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Creates a shared point from public key and secret key.","sig":null,"attributes":[{"value":"/ Creates a shared point from public key and secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161724,"byte_end":161782,"line_start":116,"line_end":116,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161783,"byte_end":161786,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ **Important: use of a strong cryptographic hash function may be critical to security! Do NOT use","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161787,"byte_end":161887,"line_start":118,"line_end":118,"column_start":1,"column_end":101}},{"value":"/ unless you understand cryptographical implications.** If not, use SharedSecret instead.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161888,"byte_end":161979,"line_start":119,"line_end":119,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161980,"byte_end":161983,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Can be used like `SharedSecret` but caller is responsible for then hashing the returned buffer.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161984,"byte_end":162083,"line_start":121,"line_end":121,"column_start":1,"column_end":100}},{"value":"/ This allows for the use of a custom hash function since `SharedSecret` uses SHA256.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162084,"byte_end":162171,"line_start":122,"line_end":122,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162172,"byte_end":162175,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ # Returns","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162176,"byte_end":162189,"line_start":124,"line_end":124,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162190,"byte_end":162193,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ 64 bytes representing the (x,y) co-ordinates of a point on the curve (32 bytes each).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162194,"byte_end":162283,"line_start":126,"line_end":126,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162284,"byte_end":162287,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162288,"byte_end":162302,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162303,"byte_end":162310,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"bitcoin_hashes\", feature = \"rand-std\", feature = \"std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162311,"byte_end":162397,"line_start":130,"line_end":130,"column_start":1,"column_end":87}},{"value":"/ # use secp256k1::{ecdh, Secp256k1, PublicKey, SecretKey};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162398,"byte_end":162459,"line_start":131,"line_end":131,"column_start":1,"column_end":62}},{"value":"/ # use secp256k1::hashes::{Hash, sha512};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162460,"byte_end":162504,"line_start":132,"line_end":132,"column_start":1,"column_end":45}},{"value":"/ # use secp256k1::rand::thread_rng;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162505,"byte_end":162543,"line_start":133,"line_end":133,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162544,"byte_end":162547,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ let s = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162548,"byte_end":162577,"line_start":135,"line_end":135,"column_start":1,"column_end":30}},{"value":"/ let (sk1, pk1) = s.generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162578,"byte_end":162637,"line_start":136,"line_end":136,"column_start":1,"column_end":60}},{"value":"/ let (sk2, pk2) = s.generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162638,"byte_end":162697,"line_start":137,"line_end":137,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162698,"byte_end":162701,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let point1 = ecdh::shared_secret_point(&pk2, &sk1);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162702,"byte_end":162757,"line_start":139,"line_end":139,"column_start":1,"column_end":56}},{"value":"/ let secret1 = sha512::Hash::hash(&point1);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162758,"byte_end":162804,"line_start":140,"line_end":140,"column_start":1,"column_end":47}},{"value":"/ let point2 = ecdh::shared_secret_point(&pk1, &sk2);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162805,"byte_end":162860,"line_start":141,"line_end":141,"column_start":1,"column_end":56}},{"value":"/ let secret2 = sha512::Hash::hash(&point2);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162861,"byte_end":162907,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(secret1, secret2)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162908,"byte_end":162940,"line_start":143,"line_end":143,"column_start":1,"column_end":33}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162941,"byte_end":162948,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":162949,"byte_end":162956,"line_start":145,"line_end":145,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":516},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdsa","qualname":"::ecdsa","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":620},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":631},{"krate":0,"index":643},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":664},{"krate":0,"index":668},{"krate":0,"index":670}],"decl_id":null,"docs":" Structs and functionality related to the ECDSA signature algorithm.\n","sig":null,"attributes":[{"value":"/ Structs and functionality related to the ECDSA signature algorithm.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":168366,"byte_end":168437,"line_start":1,"line_end":1,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":558},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serialized_signature","qualname":"::ecdsa::serialized_signature","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":1244},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":592},{"krate":0,"index":597},{"krate":0,"index":606}],"decl_id":null,"docs":" Implements [`SerializedSignature`] and related types.","sig":null,"attributes":[{"value":"/ Implements [`SerializedSignature`] and related types.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":185952,"byte_end":186009,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186010,"byte_end":186013,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ DER-serialized signatures have the issue that they can have different lengths.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186014,"byte_end":186096,"line_start":3,"line_end":3,"column_start":1,"column_end":83}},{"value":"/ We want to avoid using `Vec` since that would require allocations making the code slower and","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186097,"byte_end":186193,"line_start":4,"line_end":4,"column_start":1,"column_end":97}},{"value":"/ unable to run on platforms without allocator. We implement a special type to encapsulate","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186194,"byte_end":186286,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ serialized signatures and since it's a bit more complicated it has its own module.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186287,"byte_end":186373,"line_start":6,"line_end":6,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186572,"byte_end":186591,"line_start":18,"line_end":18,"column_start":12,"column_end":31},"name":"SerializedSignature","qualname":"::ecdsa::serialized_signature::SerializedSignature","value":"SerializedSignature {  }","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1247}],"decl_id":null,"docs":" A DER serialized Signature\n","sig":null,"attributes":[{"value":"/ A DER serialized Signature","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186507,"byte_end":186537,"line_start":16,"line_end":16,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188330,"byte_end":188338,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SerializedSignature>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the underlying data buffer.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188253,"byte_end":188304,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188309,"byte_end":188318,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188451,"byte_end":188454,"line_start":106,"line_end":106,"column_start":12,"column_end":15},"name":"len","qualname":"<SerializedSignature>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the len of the used data.\n","sig":null,"attributes":[{"value":"/ Get the len of the used data.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188392,"byte_end":188425,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188430,"byte_end":188439,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188769,"byte_end":188781,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"to_signature","qualname":"<SerializedSignature>::to_signature","value":"pub fn to_signature(&Self) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert the serialized signature into the Signature struct.\n (This DER deserializes it)\n","sig":null,"attributes":[{"value":"/ Convert the serialized signature into the Signature struct.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188645,"byte_end":188708,"line_start":116,"line_end":116,"column_start":5,"column_end":68}},{"value":"/ (This DER deserializes it)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188713,"byte_end":188743,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188748,"byte_end":188757,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188973,"byte_end":188987,"line_start":126,"line_end":126,"column_start":12,"column_end":26},"name":"from_signature","qualname":"<SerializedSignature>::from_signature","value":"pub fn from_signature(&Signature) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Create a SerializedSignature from a Signature.\n (this DER serializes it)\n","sig":null,"attributes":[{"value":"/ Create a SerializedSignature from a Signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188864,"byte_end":188914,"line_start":123,"line_end":123,"column_start":5,"column_end":55}},{"value":"/ (this DER serializes it)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188919,"byte_end":188947,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":188952,"byte_end":188961,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189126,"byte_end":189134,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SerializedSignature>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the space is zero.\n","sig":null,"attributes":[{"value":"/ Check if the space is zero.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189069,"byte_end":189100,"line_start":130,"line_end":130,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189105,"byte_end":189114,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189570,"byte_end":189578,"line_start":145,"line_end":145,"column_start":16,"column_end":24},"name":"IntoIter","qualname":"::ecdsa::serialized_signature::into_iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254}],"decl_id":null,"docs":" Owned iterator over the bytes of [`SerializedSignature`]","sig":null,"attributes":[{"value":"/ Owned iterator over the bytes of [`SerializedSignature`]","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189287,"byte_end":189347,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189352,"byte_end":189355,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Created by [`IntoIterator::into_iter`] method.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189360,"byte_end":189410,"line_start":141,"line_end":141,"column_start":5,"column_end":55}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189488,"byte_end":189526,"line_start":143,"line_end":143,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":190114,"byte_end":190122,"line_start":165,"line_end":165,"column_start":16,"column_end":24},"name":"as_slice","qualname":"<IntoIter>::as_slice","value":"pub fn as_slice(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining bytes as a slice.","sig":null,"attributes":[{"value":"/ Returns the remaining bytes as a slice.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189952,"byte_end":189995,"line_start":161,"line_end":161,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":190004,"byte_end":190007,"line_start":162,"line_end":162,"column_start":9,"column_end":12}},{"value":"/ This method is analogous to [`core::slice::Iter::as_slice`].","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":190016,"byte_end":190080,"line_start":163,"line_end":163,"column_start":9,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":190089,"byte_end":190098,"line_start":164,"line_end":164,"column_start":9,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":168995,"byte_end":169004,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ecdsa::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature\n","sig":null,"attributes":[{"value":"/ An ECDSA signature","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":168917,"byte_end":168939,"line_start":22,"line_end":22,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169731,"byte_end":169739,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature>::from_der","value":"pub fn from_der(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a DER-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169653,"byte_end":169662,"line_start":51,"line_end":51,"column_start":5,"column_end":14}},{"value":"/ Converts a DER-encoded byte slice to a signature","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169667,"byte_end":169719,"line_start":52,"line_end":52,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":170365,"byte_end":170377,"line_start":73,"line_end":73,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<Signature>::from_compact","value":"pub fn from_compact(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a 64-byte compact-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"/ Converts a 64-byte compact-encoded byte slice to a signature","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":170289,"byte_end":170353,"line_start":72,"line_end":72,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":171215,"byte_end":171227,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"from_der_lax","qualname":"<Signature>::from_der_lax","value":"pub fn from_der_lax(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[{"value":"/ Converts a \"lax DER\"-encoded byte slice to a signature. This is basically","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":170916,"byte_end":170993,"line_start":93,"line_end":93,"column_start":5,"column_end":82}},{"value":"/ only useful for validating signatures in the Bitcoin blockchain from before","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":170998,"byte_end":171077,"line_start":94,"line_end":94,"column_start":5,"column_end":84}},{"value":"/ 2016. It should never be used in new applications. This library does not","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":171082,"byte_end":171158,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/ support serializing to this \"format\"","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":171163,"byte_end":171203,"line_start":96,"line_end":96,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172956,"byte_end":172967,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"pub fn normalize_s(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accommodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[{"value":"/ Normalizes a signature to a \"low S\" form. In ECDSA, signatures are","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":171771,"byte_end":171841,"line_start":116,"line_end":116,"column_start":5,"column_end":75}},{"value":"/ of the form (r, s) where r and s are numbers lying in some finite","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":171846,"byte_end":171915,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ field. The verification equation will pass for (r, s) iff it passes","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":171920,"byte_end":171991,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/ for (r, -s), so it is possible to ``modify'' signatures in transit","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":171996,"byte_end":172066,"line_start":119,"line_end":119,"column_start":5,"column_end":75}},{"value":"/ by flipping the sign of s. This does not constitute a forgery since","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172071,"byte_end":172142,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ the signed message still cannot be changed, but for some applications,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172147,"byte_end":172221,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ changing even the signature itself can be a problem. Such applications","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172226,"byte_end":172300,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ require a \"strong signature\". It is believed that ECDSA is a strong","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172305,"byte_end":172376,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ signature except for this ambiguity in the sign of s, so to accommodate","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172381,"byte_end":172456,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ these applications libsecp256k1 will only accept signatures for which","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172461,"byte_end":172534,"line_start":125,"line_end":125,"column_start":5,"column_end":78}},{"value":"/ s is in the lower half of the field range. This eliminates the","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172539,"byte_end":172605,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ ambiguity.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172610,"byte_end":172624,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172629,"byte_end":172632,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ However, for some systems, signatures with high s-values are considered","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172637,"byte_end":172712,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ valid. (For example, parsing the historic Bitcoin blockchain requires","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172717,"byte_end":172790,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ this.) For these applications we provide this normalization function,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172795,"byte_end":172868,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ which ensures that the s value lies in the lower half of its range.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":172873,"byte_end":172944,"line_start":132,"line_end":132,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173418,"byte_end":173424,"line_start":147,"line_end":147,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Signature>::as_ptr","value":"pub fn as_ptr(&Self) -> *const ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173331,"byte_end":173392,"line_start":145,"line_end":145,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173397,"byte_end":173406,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173581,"byte_end":173591,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Signature>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173486,"byte_end":173555,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173560,"byte_end":173569,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173727,"byte_end":173740,"line_start":159,"line_end":159,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"pub fn serialize_der(&Self) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in DER format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173659,"byte_end":173668,"line_start":157,"line_end":157,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in DER format","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":173673,"byte_end":173715,"line_start":158,"line_end":158,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":174328,"byte_end":174345,"line_start":176,"line_end":176,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<Signature>::serialize_compact","value":"pub fn serialize_compact(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":174256,"byte_end":174265,"line_start":174,"line_end":174,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in compact format","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":174270,"byte_end":174316,"line_start":175,"line_end":175,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":176667,"byte_end":176671,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"sign","qualname":"<Secp256k1<C>>::sign","value":"pub fn sign(&Self, &Message, &SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":176461,"byte_end":176541,"line_start":249,"line_end":249,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":176546,"byte_end":176585,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.21.0\", note = \"Use sign_ecdsa instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":176590,"byte_end":176655,"line_start":251,"line_end":251,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":177613,"byte_end":177623,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"sign_ecdsa","qualname":"<Secp256k1<C>>::sign_ecdsa","value":"pub fn sign_ecdsa(&Self, &Message, &SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":177477,"byte_end":177557,"line_start":273,"line_end":273,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":177562,"byte_end":177601,"line_start":274,"line_end":274,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":178158,"byte_end":178183,"line_start":284,"line_end":284,"column_start":12,"column_end":37},"name":"sign_ecdsa_with_noncedata","qualname":"<Secp256k1<C>>::sign_ecdsa_with_noncedata","value":"pub fn sign_ecdsa_with_noncedata(&Self, &Message, &SecretKey, &[u8; ])\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n and includes 32 bytes of noncedata in the nonce generation via inclusion in\n one of the hash operations during nonce generation. This is useful when multiple\n signatures are needed for the same Message and SecretKey while still using RFC6979.\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":177757,"byte_end":177837,"line_start":279,"line_end":279,"column_start":5,"column_end":85}},{"value":"/ and includes 32 bytes of noncedata in the nonce generation via inclusion in","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":177842,"byte_end":177921,"line_start":280,"line_end":280,"column_start":5,"column_end":84}},{"value":"/ one of the hash operations during nonce generation. This is useful when multiple","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":177926,"byte_end":178010,"line_start":281,"line_end":281,"column_start":5,"column_end":89}},{"value":"/ signatures are needed for the same Message and SecretKey while still using RFC6979.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":178015,"byte_end":178102,"line_start":282,"line_end":282,"column_start":5,"column_end":92}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":178107,"byte_end":178146,"line_start":283,"line_end":283,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180342,"byte_end":180354,"line_start":331,"line_end":331,"column_start":12,"column_end":24},"name":"sign_grind_r","qualname":"<Secp256k1<C>>::sign_grind_r","value":"pub fn sign_grind_r(&Self, &Message, &SecretKey, usize) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 - `bytes_to_grind` bytes. The number\n of signing operation performed by this function is exponential in the\n number of bytes grinded.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":179862,"byte_end":179939,"line_start":324,"line_end":324,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":179944,"byte_end":180019,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 - `bytes_to_grind` bytes. The number","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180024,"byte_end":180097,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/ of signing operation performed by this function is exponential in the","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180102,"byte_end":180175,"line_start":327,"line_end":327,"column_start":5,"column_end":78}},{"value":"/ number of bytes grinded.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180180,"byte_end":180208,"line_start":328,"line_end":328,"column_start":5,"column_end":33}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180213,"byte_end":180252,"line_start":329,"line_end":329,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.21.0\", note = \"Use sign_ecdsa_grind_r instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180257,"byte_end":180330,"line_start":330,"line_end":330,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180901,"byte_end":180919,"line_start":341,"line_end":341,"column_start":12,"column_end":30},"name":"sign_ecdsa_grind_r","qualname":"<Secp256k1<C>>::sign_ecdsa_grind_r","value":"pub fn sign_ecdsa_grind_r(&Self, &Message, &SecretKey, usize) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 - `bytes_to_grind` bytes. The number\n of signing operation performed by this function is exponential in the\n number of bytes grinded.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180499,"byte_end":180576,"line_start":335,"line_end":335,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180581,"byte_end":180656,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 - `bytes_to_grind` bytes. The number","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180661,"byte_end":180734,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of signing operation performed by this function is exponential in the","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180739,"byte_end":180812,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/ number of bytes grinded.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180817,"byte_end":180845,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":180850,"byte_end":180889,"line_start":340,"line_end":340,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181637,"byte_end":181647,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"sign_low_r","qualname":"<Secp256k1<C>>::sign_low_r","value":"pub fn sign_low_r(&Self, &Message, &SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 bytes and compatible with the low r\n signature implementation of bitcoin core. In average, this function\n will perform two signing operations.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181150,"byte_end":181227,"line_start":346,"line_end":346,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181232,"byte_end":181307,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 bytes and compatible with the low r","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181312,"byte_end":181384,"line_start":348,"line_end":348,"column_start":5,"column_end":77}},{"value":"/ signature implementation of bitcoin core. In average, this function","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181389,"byte_end":181460,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/ will perform two signing operations.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181465,"byte_end":181505,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181510,"byte_end":181549,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.21.0\", note = \"Use sign_ecdsa_low_r instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181554,"byte_end":181625,"line_start":352,"line_end":352,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182199,"byte_end":182215,"line_start":363,"line_end":363,"column_start":12,"column_end":28},"name":"sign_ecdsa_low_r","qualname":"<Secp256k1<C>>::sign_ecdsa_low_r","value":"pub fn sign_ecdsa_low_r(&Self, &Message, &SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 bytes and compatible with the low r\n signature implementation of bitcoin core. In average, this function\n will perform two signing operations.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181788,"byte_end":181865,"line_start":357,"line_end":357,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181870,"byte_end":181945,"line_start":358,"line_end":358,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 bytes and compatible with the low r","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":181950,"byte_end":182022,"line_start":359,"line_end":359,"column_start":5,"column_end":77}},{"value":"/ signature implementation of bitcoin core. In average, this function","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182027,"byte_end":182098,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ will perform two signing operations.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182103,"byte_end":182143,"line_start":361,"line_end":361,"column_start":5,"column_end":45}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182148,"byte_end":182187,"line_start":362,"line_end":362,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183568,"byte_end":183574,"line_start":393,"line_end":393,"column_start":12,"column_end":18},"name":"verify","qualname":"<Secp256k1<C>>::verify","value":"pub fn verify(&Self, &Message, &Signature, &PublicKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(())` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.","sig":null,"attributes":[{"value":"/ Checks that `sig` is a valid ECDSA signature for `msg` using the public","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182395,"byte_end":182470,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ key `pubkey`. Returns `Ok(())` on success. Note that this function cannot","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182475,"byte_end":182552,"line_start":370,"line_end":370,"column_start":5,"column_end":82}},{"value":"/ be used for Bitcoin consensus checking since there may exist signatures","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182557,"byte_end":182632,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182637,"byte_end":182715,"line_start":372,"line_end":372,"column_start":5,"column_end":83}},{"value":"/ verify-capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182720,"byte_end":182747,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182752,"byte_end":182755,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182760,"byte_end":182771,"line_start":375,"line_end":375,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182776,"byte_end":182834,"line_start":376,"line_end":376,"column_start":5,"column_end":63}},{"value":"/ # use secp256k1::rand::thread_rng;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182839,"byte_end":182877,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ # use secp256k1::{Secp256k1, Message, Error};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182882,"byte_end":182931,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182936,"byte_end":182941,"line_start":379,"line_end":379,"column_start":5,"column_end":10}},{"value":"/ # let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182946,"byte_end":182980,"line_start":380,"line_end":380,"column_start":5,"column_end":39}},{"value":"/ # let (secret_key, public_key) = secp.generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182985,"byte_end":183063,"line_start":381,"line_end":381,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183068,"byte_end":183073,"line_start":382,"line_end":382,"column_start":5,"column_end":10}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183078,"byte_end":183148,"line_start":383,"line_end":383,"column_start":5,"column_end":75}},{"value":"/ let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183153,"byte_end":183200,"line_start":384,"line_end":384,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(secp.verify(&message, &sig, &public_key), Ok(()));","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183205,"byte_end":183270,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183275,"byte_end":183278,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let message = Message::from_slice(&[0xcd; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183283,"byte_end":183353,"line_start":387,"line_end":387,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(secp.verify(&message, &sig, &public_key), Err(Error::IncorrectSignature));","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183358,"byte_end":183447,"line_start":388,"line_end":388,"column_start":5,"column_end":94}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183452,"byte_end":183459,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183464,"byte_end":183471,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183476,"byte_end":183485,"line_start":391,"line_end":391,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.21.0\", note = \"Use verify_ecdsa instead\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183490,"byte_end":183556,"line_start":392,"line_end":392,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184824,"byte_end":184836,"line_start":420,"line_end":420,"column_start":12,"column_end":24},"name":"verify_ecdsa","qualname":"<Secp256k1<C>>::verify_ecdsa","value":"pub fn verify_ecdsa(&Self, &Message, &Signature, &PublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(())` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.","sig":null,"attributes":[{"value":"/ Checks that `sig` is a valid ECDSA signature for `msg` using the public","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183704,"byte_end":183779,"line_start":397,"line_end":397,"column_start":5,"column_end":80}},{"value":"/ key `pubkey`. Returns `Ok(())` on success. Note that this function cannot","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183784,"byte_end":183861,"line_start":398,"line_end":398,"column_start":5,"column_end":82}},{"value":"/ be used for Bitcoin consensus checking since there may exist signatures","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183866,"byte_end":183941,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/ which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":183946,"byte_end":184024,"line_start":400,"line_end":400,"column_start":5,"column_end":83}},{"value":"/ verify-capable context.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184029,"byte_end":184056,"line_start":401,"line_end":401,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184061,"byte_end":184064,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184069,"byte_end":184080,"line_start":403,"line_end":403,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"rand-std\"))] {","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184085,"byte_end":184143,"line_start":404,"line_end":404,"column_start":5,"column_end":63}},{"value":"/ # use secp256k1::rand::thread_rng;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184148,"byte_end":184186,"line_start":405,"line_end":405,"column_start":5,"column_end":43}},{"value":"/ # use secp256k1::{Secp256k1, Message, Error};","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184191,"byte_end":184240,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184245,"byte_end":184250,"line_start":407,"line_end":407,"column_start":5,"column_end":10}},{"value":"/ # let secp = Secp256k1::new();","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184255,"byte_end":184289,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/ # let (secret_key, public_key) = secp.generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184294,"byte_end":184372,"line_start":409,"line_end":409,"column_start":5,"column_end":83}},{"value":"/ #","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184377,"byte_end":184382,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184387,"byte_end":184457,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ let sig = secp.sign_ecdsa(&message, &secret_key);","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184462,"byte_end":184515,"line_start":412,"line_end":412,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(secp.verify_ecdsa(&message, &sig, &public_key), Ok(()));","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184520,"byte_end":184591,"line_start":413,"line_end":413,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184596,"byte_end":184599,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let message = Message::from_slice(&[0xcd; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184604,"byte_end":184674,"line_start":415,"line_end":415,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(secp.verify_ecdsa(&message, &sig, &public_key), Err(Error::IncorrectSignature));","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184679,"byte_end":184774,"line_start":416,"line_end":416,"column_start":5,"column_end":100}},{"value":"/ # }","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184779,"byte_end":184786,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184791,"byte_end":184798,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":184803,"byte_end":184812,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":672},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scalar","qualname":"::scalar","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":1275},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":696},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":698},{"krate":0,"index":700}],"decl_id":null,"docs":" Provides [`Scalar`] and related types.","sig":null,"attributes":[{"value":"/ Provides [`Scalar`] and related types.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193311,"byte_end":193353,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193354,"byte_end":193357,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ In elliptic curve cryptography scalars are non-point values that can be used to multiply","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193358,"byte_end":193450,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ points. The most common type of scalars are private keys. However not all scalars are private","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193451,"byte_end":193548,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ keys. They can even be public *values*. To make handling them safer and easier this module","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193549,"byte_end":193643,"line_start":5,"line_end":5,"column_start":1,"column_end":95}},{"value":"/ provides the `Scalar` type and related.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193644,"byte_end":193687,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194322,"byte_end":194328,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" Positive 256-bit integer guaranteed to be less than the secp256k1 curve order.","sig":null,"attributes":[{"value":"/ Positive 256-bit integer guaranteed to be less than the secp256k1 curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193705,"byte_end":193787,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193788,"byte_end":193791,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The difference between `PrivateKey` and `Scalar` is that `Scalar` doesn't guarantee being","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193792,"byte_end":193885,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ securely usable as a private key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193886,"byte_end":193923,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193924,"byte_end":193927,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ **Warning: the operations on this type are NOT constant time!**","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193928,"byte_end":193995,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ Using this with secret values is not advised.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":193996,"byte_end":194045,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194216,"byte_end":194255,"line_start":20,"line_end":20,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":679},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194632,"byte_end":194636,"line_start":31,"line_end":31,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::scalar::Scalar::ZERO","value":"Scalar","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Scalar representing `0`\n","sig":null,"attributes":[{"value":"/ Scalar representing `0`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194590,"byte_end":194617,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":680},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194799,"byte_end":194802,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"ONE","qualname":"::scalar::Scalar::ONE","value":"Scalar","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Scalar representing `1`\n","sig":null,"attributes":[{"value":"/ Scalar representing `1`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194757,"byte_end":194784,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":681},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194980,"byte_end":194983,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"MAX","qualname":"::scalar::Scalar::MAX","value":"Scalar","parent":{"krate":0,"index":678},"children":[],"decl_id":null,"docs":" Maximum valid value: `curve_order - 1`\n","sig":null,"attributes":[{"value":"/ Maximum valid value: `curve_order - 1`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194923,"byte_end":194965,"line_start":34,"line_end":34,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195970,"byte_end":195983,"line_start":66,"line_end":66,"column_start":12,"column_end":25},"name":"from_be_bytes","qualname":"<Scalar>::from_be_bytes","value":"pub fn from_be_bytes([u8; ]) -> Result<Self, OutOfRangeError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to deserialize from big endian bytes","sig":null,"attributes":[{"value":"/ Tries to deserialize from big endian bytes","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195694,"byte_end":195740,"line_start":58,"line_end":58,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195745,"byte_end":195748,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ **Security warning:** this function is not constant time!","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195753,"byte_end":195814,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/ Passing secret data is not recommended.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195819,"byte_end":195862,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195867,"byte_end":195870,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195875,"byte_end":195887,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195892,"byte_end":195895,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns error when the value is above the curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":195900,"byte_end":195958,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196546,"byte_end":196559,"line_start":83,"line_end":83,"column_start":12,"column_end":25},"name":"from_le_bytes","qualname":"<Scalar>::from_le_bytes","value":"pub fn from_le_bytes([u8; ]) -> Result<Self, OutOfRangeError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to deserialize from little endian bytes","sig":null,"attributes":[{"value":"/ Tries to deserialize from little endian bytes","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196267,"byte_end":196316,"line_start":75,"line_end":75,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196321,"byte_end":196324,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ **Security warning:** this function is not constant time!","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196329,"byte_end":196390,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/ Passing secret data is not recommended.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196395,"byte_end":196438,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196443,"byte_end":196446,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196451,"byte_end":196463,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196468,"byte_end":196471,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Returns error when the value is above the curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196476,"byte_end":196534,"line_start":82,"line_end":82,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196733,"byte_end":196744,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"to_be_bytes","qualname":"<Scalar>::to_be_bytes","value":"pub fn to_be_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes to big endian bytes\n","sig":null,"attributes":[{"value":"/ Serializes to big endian bytes","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196687,"byte_end":196721,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196840,"byte_end":196851,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"to_le_bytes","qualname":"<Scalar>::to_le_bytes","value":"pub fn to_le_bytes(Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes to little endian bytes\n","sig":null,"attributes":[{"value":"/ Serializes to little endian bytes","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":196791,"byte_end":196828,"line_start":93,"line_end":93,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":197699,"byte_end":197714,"line_start":126,"line_end":126,"column_start":12,"column_end":27},"name":"OutOfRangeError","qualname":"::scalar::OutOfRangeError","value":"OutOfRangeError {  }","parent":null,"children":[],"decl_id":null,"docs":" Error returned when the value of scalar is invalid - larger than the curve order.\n","sig":null,"attributes":[{"value":"/ Error returned when the value of scalar is invalid - larger than the curve order.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":197387,"byte_end":197472,"line_start":120,"line_end":120,"column_start":1,"column_end":86}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":197586,"byte_end":197624,"line_start":123,"line_end":123,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":197670,"byte_end":197687,"line_start":125,"line_end":125,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":701},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schnorr","qualname":"::schnorr","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1315},{"krate":0,"index":1319},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1350},{"krate":0,"index":755},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":776},{"krate":0,"index":780}],"decl_id":null,"docs":" # schnorrsig\n Support for Schnorr signatures.","sig":null,"attributes":[{"value":"/ # schnorrsig","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":198023,"byte_end":198039,"line_start":1,"line_end":1,"column_start":1,"column_end":17}},{"value":"/ Support for Schnorr signatures.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":198040,"byte_end":198075,"line_start":2,"line_end":2,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":198076,"byte_end":198079,"line_start":3,"line_end":3,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":751},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":198485,"byte_end":198494,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"Signature","qualname":"::schnorr::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Represents a Schnorr signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":198438,"byte_end":198473,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":200344,"byte_end":200354,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Signature>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Signature directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a Signature directly from a slice","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":200273,"byte_end":200318,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":200323,"byte_end":200332,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":202746,"byte_end":202773,"line_start":143,"line_end":143,"column_start":12,"column_end":39},"name":"schnorrsig_sign_no_aux_rand","qualname":"<Secp256k1<C>>::schnorrsig_sign_no_aux_rand","value":"pub fn schnorrsig_sign_no_aux_rand(&Self, &Message, &KeyPair) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a schnorr signature without using any auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a schnorr signature without using any auxiliary random data.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":202579,"byte_end":202650,"line_start":141,"line_end":141,"column_start":5,"column_end":76}},{"value":"deprecated(since = \"0.21.0\", note =\n\"Use sign_schnorr_no_aux_rand instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":202655,"byte_end":202734,"line_start":142,"line_end":142,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":203007,"byte_end":203031,"line_start":152,"line_end":152,"column_start":12,"column_end":36},"name":"sign_schnorr_no_aux_rand","qualname":"<Secp256k1<C>>::sign_schnorr_no_aux_rand","value":"pub fn sign_schnorr_no_aux_rand(&Self, &Message, &KeyPair) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a schnorr signature without using any auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a schnorr signature without using any auxiliary random data.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":202924,"byte_end":202995,"line_start":151,"line_end":151,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":203357,"byte_end":203386,"line_start":162,"line_end":162,"column_start":12,"column_end":41},"name":"schnorrsig_sign_with_aux_rand","qualname":"<Secp256k1<C>>::schnorrsig_sign_with_aux_rand","value":"pub fn schnorrsig_sign_with_aux_rand(&Self, &Message, &KeyPair, &[u8; ])\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a Schnorr signature using the given auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a Schnorr signature using the given auxiliary random data.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":203190,"byte_end":203259,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"deprecated(since = \"0.21.0\", note =\n\"Use sign_schnorr_with_aux_rand instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":203264,"byte_end":203345,"line_start":161,"line_end":161,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":203659,"byte_end":203685,"line_start":172,"line_end":172,"column_start":12,"column_end":38},"name":"sign_schnorr_with_aux_rand","qualname":"<Secp256k1<C>>::sign_schnorr_with_aux_rand","value":"pub fn sign_schnorr_with_aux_rand(&Self, &Message, &KeyPair, &[u8; ])\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a Schnorr signature using the given auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a Schnorr signature using the given auxiliary random data.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":203578,"byte_end":203647,"line_start":171,"line_end":171,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205176,"byte_end":205193,"line_start":218,"line_end":218,"column_start":12,"column_end":29},"name":"schnorrsig_verify","qualname":"<Secp256k1<C>>::schnorrsig_verify","value":"pub fn schnorrsig_verify(&Self, &Signature, &Message, &XOnlyPublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Verify a Schnorr signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205059,"byte_end":205090,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"deprecated(since = \"0.21.0\", note = \"Use verify_schnorr instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205095,"byte_end":205164,"line_start":217,"line_end":217,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205420,"byte_end":205434,"line_start":228,"line_end":228,"column_start":12,"column_end":26},"name":"verify_schnorr","qualname":"<Secp256k1<C>>::verify_schnorr","value":"pub fn verify_schnorr(&Self, &Signature, &Message, &XOnlyPublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Verify a Schnorr signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205377,"byte_end":205408,"line_start":227,"line_end":227,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":820},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8787,"byte_end":8797,"line_start":212,"line_end":212,"column_start":9,"column_end":19},"name":"schnorrsig","qualname":"::schnorrsig","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823}],"decl_id":null,"docs":" Schnorr Signature related methods.\n","sig":null,"attributes":[{"value":"/ Schnorr Signature related methods.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8677,"byte_end":8715,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"deprecated(since = \"0.21.0\", note = \"Use schnorr instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8716,"byte_end":8778,"line_start":211,"line_end":211,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":821},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8946,"byte_end":8955,"line_start":215,"line_end":215,"column_start":14,"column_end":23},"name":"PublicKey","qualname":"::schnorrsig::PublicKey","value":"crate::key::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" backwards compatible re-export of xonly key\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.21.0\", note = \"Use crate::XOnlyPublicKey instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8804,"byte_end":8880,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ backwards compatible re-export of xonly key","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8885,"byte_end":8932,"line_start":214,"line_end":214,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":822},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9123,"byte_end":9130,"line_start":218,"line_end":218,"column_start":14,"column_end":21},"name":"KeyPair","qualname":"::schnorrsig::KeyPair","value":"crate::key::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" backwards compatible re-export of keypair\n","sig":null,"attributes":[{"value":"/ backwards compatible re-export of keypair","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":8990,"byte_end":9035,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.21.0\", note = \"Use crate::KeyPair instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9040,"byte_end":9109,"line_start":217,"line_end":217,"column_start":5,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":823},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9306,"byte_end":9315,"line_start":221,"line_end":221,"column_start":14,"column_end":23},"name":"Signature","qualname":"::schnorrsig::Signature","value":"crate::schnorr::Signature","parent":null,"children":[],"decl_id":null,"docs":" backwards compatible re-export of schnorr signatures\n","sig":null,"attributes":[{"value":"/ backwards compatible re-export of schnorr signatures","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9158,"byte_end":9214,"line_start":219,"line_end":219,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.21.0\", note = \"Use schnorr::Signature instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9219,"byte_end":9292,"line_start":220,"line_end":220,"column_start":5,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":824},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9484,"byte_end":9493,"line_start":226,"line_end":226,"column_start":10,"column_end":19},"name":"Signature","qualname":"::Signature","value":"ecdsa::Signature","parent":null,"children":[],"decl_id":null,"docs":" backwards compatible re-export of ecdsa signatures\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.21.0\", note = \"Use ecdsa::Signature instead.\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9348,"byte_end":9419,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"/ backwards compatible re-export of ecdsa signatures","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9420,"byte_end":9474,"line_start":225,"line_end":225,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":825},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9769,"byte_end":9786,"line_start":231,"line_end":231,"column_start":11,"column_end":28},"name":"ThirtyTwoByteHash","qualname":"::ThirtyTwoByteHash","value":"ThirtyTwoByteHash","parent":null,"children":[{"krate":0,"index":826}],"decl_id":null,"docs":" Trait describing something that promises to be a 32-byte random number; in particular,\n it has negligible probability of being zero or overflowing the group order. Such objects\n may be converted to `Message`s without any error paths.\n","sig":null,"attributes":[{"value":"/ Trait describing something that promises to be a 32-byte random number; in particular,","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9515,"byte_end":9605,"line_start":228,"line_end":228,"column_start":1,"column_end":91}},{"value":"/ it has negligible probability of being zero or overflowing the group order. Such objects","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9606,"byte_end":9698,"line_start":229,"line_end":229,"column_start":1,"column_end":93}},{"value":"/ may be converted to `Message`s without any error paths.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9699,"byte_end":9758,"line_start":230,"line_end":230,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9845,"byte_end":9852,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"into_32","qualname":"::ThirtyTwoByteHash::into_32","value":"pub fn into_32(Self) -> [u8; ]","parent":{"krate":0,"index":825},"children":[],"decl_id":null,"docs":" Converts the object into a 32-byte array\n","sig":null,"attributes":[{"value":"/ Converts the object into a 32-byte array","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":9793,"byte_end":9837,"line_start":232,"line_end":232,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":10607,"byte_end":10614,"line_start":261,"line_end":261,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (hashed) message input to an ECDSA signature.\n","sig":null,"attributes":[{"value":"/ A (hashed) message input to an ECDSA signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":10544,"byte_end":10595,"line_start":260,"line_end":260,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":11203,"byte_end":11213,"line_start":273,"line_end":273,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Message>::from_slice","value":"pub fn from_slice(&[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" **If you just want to sign an arbitrary message use `Message::from_hashed_data` instead.**","sig":null,"attributes":[{"value":"/ **If you just want to sign an arbitrary message use `Message::from_hashed_data` instead.**","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":10755,"byte_end":10849,"line_start":266,"line_end":266,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":10854,"byte_end":10857,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Converts a `MESSAGE_SIZE`-byte slice to a message object. **WARNING:** the slice has to be a","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":10862,"byte_end":10958,"line_start":268,"line_end":268,"column_start":5,"column_end":101}},{"value":"/ cryptographically secure hash of the actual message that's going to be signed. Otherwise","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":10963,"byte_end":11055,"line_start":269,"line_end":269,"column_start":5,"column_end":97}},{"value":"/ the result of signing isn't a","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":11060,"byte_end":11093,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/ [secure signature](https://twitter.com/pwuille/status/1063582706288586752).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":11098,"byte_end":11177,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":11182,"byte_end":11191,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13041,"byte_end":13059,"line_start":332,"line_end":332,"column_start":5,"column_end":23},"name":"IncorrectSignature","qualname":"::Error::IncorrectSignature","value":"Error::IncorrectSignature","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Signature failed verification\n","sig":null,"attributes":[{"value":"/ Signature failed verification","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13003,"byte_end":13036,"line_start":331,"line_end":331,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13181,"byte_end":13195,"line_start":335,"line_end":335,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`\n constant).\n","sig":null,"attributes":[{"value":"/ Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13065,"byte_end":13157,"line_start":333,"line_end":333,"column_start":5,"column_end":97}},{"value":"/ constant).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13162,"byte_end":13176,"line_start":334,"line_end":334,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13225,"byte_end":13241,"line_start":337,"line_end":337,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Bad public key.\n","sig":null,"attributes":[{"value":"/ Bad public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13201,"byte_end":13220,"line_start":336,"line_end":336,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13270,"byte_end":13286,"line_start":339,"line_end":339,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Bad signature.\n","sig":null,"attributes":[{"value":"/ Bad signature.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13247,"byte_end":13265,"line_start":338,"line_end":338,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13316,"byte_end":13332,"line_start":341,"line_end":341,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Bad secret key.\n","sig":null,"attributes":[{"value":"/ Bad secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13292,"byte_end":13311,"line_start":340,"line_end":340,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13365,"byte_end":13384,"line_start":343,"line_end":343,"column_start":5,"column_end":24},"name":"InvalidSharedSecret","qualname":"::Error::InvalidSharedSecret","value":"Error::InvalidSharedSecret","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Bad shared secret.\n","sig":null,"attributes":[{"value":"/ Bad shared secret.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13338,"byte_end":13360,"line_start":342,"line_end":342,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13415,"byte_end":13432,"line_start":345,"line_end":345,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Bad recovery id.\n","sig":null,"attributes":[{"value":"/ Bad recovery id.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13390,"byte_end":13410,"line_start":344,"line_end":344,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13489,"byte_end":13501,"line_start":347,"line_end":347,"column_start":5,"column_end":17},"name":"InvalidTweak","qualname":"::Error::InvalidTweak","value":"Error::InvalidTweak","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Tried to add/multiply by an invalid tweak.\n","sig":null,"attributes":[{"value":"/ Tried to add/multiply by an invalid tweak.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13438,"byte_end":13484,"line_start":346,"line_end":346,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13587,"byte_end":13602,"line_start":349,"line_end":349,"column_start":5,"column_end":20},"name":"NotEnoughMemory","qualname":"::Error::NotEnoughMemory","value":"Error::NotEnoughMemory","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Didn't pass enough memory to context creation with preallocated memory.\n","sig":null,"attributes":[{"value":"/ Didn't pass enough memory to context creation with preallocated memory.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13507,"byte_end":13582,"line_start":348,"line_end":348,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13640,"byte_end":13659,"line_start":351,"line_end":351,"column_start":5,"column_end":24},"name":"InvalidPublicKeySum","qualname":"::Error::InvalidPublicKeySum","value":"Error::InvalidPublicKeySum","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" Bad set of public keys.\n","sig":null,"attributes":[{"value":"/ Bad set of public keys.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13608,"byte_end":13635,"line_start":350,"line_end":350,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13714,"byte_end":13732,"line_start":353,"line_end":353,"column_start":5,"column_end":23},"name":"InvalidParityValue","qualname":"::Error::InvalidParityValue","value":"Error::InvalidParityValue(key::InvalidParityValue)","parent":{"krate":0,"index":1395},"children":[],"decl_id":null,"docs":" The only valid parity values are 0 or 1.\n","sig":null,"attributes":[{"value":"/ The only valid parity values are 0 or 1.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13665,"byte_end":13709,"line_start":352,"line_end":352,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":12991,"byte_end":12996,"line_start":330,"line_end":330,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    IncorrectSignature,\n    InvalidMessage,\n    InvalidPublicKey,\n    InvalidSignature,\n    InvalidSecretKey,\n    InvalidSharedSecret,\n    InvalidRecoveryId,\n    InvalidTweak,\n    NotEnoughMemory,\n    InvalidPublicKeySum,\n    InvalidParityValue(key::InvalidParityValue),\n}","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1406},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1414},{"krate":0,"index":1416}],"decl_id":null,"docs":" An ECDSA error\n","sig":null,"attributes":[{"value":"/ An ECDSA error","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":12895,"byte_end":12913,"line_start":328,"line_end":328,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":847},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":15626,"byte_end":15635,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"Secp256k1 {  }","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"decl_id":null,"docs":" The secp256k1 engine, used to execute all signature operations.\n","sig":null,"attributes":[{"value":"/ The secp256k1 engine, used to execute all signature operations.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":15547,"byte_end":15614,"line_start":397,"line_end":397,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16866,"byte_end":16869,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Secp256k1<C>>::ctx","value":"pub fn ctx(&Self) -> &*mut ffi::Context","parent":null,"children":[],"decl_id":null,"docs":" Getter for the raw pointer to the underlying secp256k1 context. This\n shouldn't be needed with normal usage of the library. It enables\n extending the Secp256k1 with more cryptographic algorithms outside of\n this crate.\n","sig":null,"attributes":[{"value":"/ Getter for the raw pointer to the underlying secp256k1 context. This","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16611,"byte_end":16683,"line_start":432,"line_end":432,"column_start":5,"column_end":77}},{"value":"/ shouldn't be needed with normal usage of the library. It enables","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16688,"byte_end":16756,"line_start":433,"line_end":433,"column_start":5,"column_end":73}},{"value":"/ extending the Secp256k1 with more cryptographic algorithms outside of","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16761,"byte_end":16834,"line_start":434,"line_end":434,"column_start":5,"column_end":78}},{"value":"/ this crate.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16839,"byte_end":16854,"line_start":435,"line_end":435,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":17045,"byte_end":17065,"line_start":441,"line_end":441,"column_start":12,"column_end":32},"name":"preallocate_size_gen","qualname":"<Secp256k1<C>>::preallocate_size_gen","value":"pub fn preallocate_size_gen() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all).\n","sig":null,"attributes":[{"value":"/ Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16930,"byte_end":17033,"line_start":440,"line_end":440,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":18057,"byte_end":18073,"line_start":463,"line_end":463,"column_start":12,"column_end":28},"name":"seeded_randomize","qualname":"<Secp256k1<C>>::seeded_randomize","value":"pub fn seeded_randomize(&mut Self, &[u8; ])","parent":null,"children":[],"decl_id":null,"docs":" (Re)randomizes the Secp256k1 context for extra sidechannel resistance given 32 bytes of\n cryptographically-secure random data;\n see comment in libsecp256k1 commit d2275795f by Gregory Maxwell.\n","sig":null,"attributes":[{"value":"/ (Re)randomizes the Secp256k1 context for extra sidechannel resistance given 32 bytes of","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":17835,"byte_end":17926,"line_start":460,"line_end":460,"column_start":5,"column_end":96}},{"value":"/ cryptographically-secure random data;","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":17931,"byte_end":17972,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/ see comment in libsecp256k1 commit d2275795f by Gregory Maxwell.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":17977,"byte_end":18045,"line_start":462,"line_end":462,"column_start":5,"column_end":73}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50248,"byte_end":50261,"line_start":90,"line_end":90,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50605,"byte_end":50618,"line_start":101,"line_end":101,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50798,"byte_end":50807,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51982,"byte_end":51989,"line_start":144,"line_end":144,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53176,"byte_end":53188,"line_start":180,"line_end":180,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58270,"byte_end":58285,"line_start":101,"line_end":101,"column_start":27,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58321,"byte_end":58343,"line_start":102,"line_end":102,"column_start":27,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58379,"byte_end":58399,"line_start":103,"line_end":103,"column_start":27,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58755,"byte_end":58763,"line_start":117,"line_end":117,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58796,"byte_end":58799,"line_start":118,"line_end":118,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58832,"byte_end":58842,"line_start":119,"line_end":119,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59630,"byte_end":59638,"line_start":138,"line_end":138,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59663,"byte_end":59666,"line_start":139,"line_end":139,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59697,"byte_end":59707,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59737,"byte_end":59740,"line_start":142,"line_end":142,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59773,"byte_end":59781,"line_start":144,"line_end":144,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60126,"byte_end":60136,"line_start":154,"line_end":154,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60488,"byte_end":60491,"line_start":164,"line_end":164,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60843,"byte_end":60852,"line_start":174,"line_end":174,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62536,"byte_end":62545,"line_start":214,"line_end":214,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62972,"byte_end":62981,"line_start":225,"line_end":225,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63439,"byte_end":63448,"line_start":236,"line_end":236,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63932,"byte_end":63941,"line_start":247,"line_end":247,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64052,"byte_end":64061,"line_start":253,"line_end":253,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64584,"byte_end":64604,"line_start":267,"line_end":267,"column_start":24,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64637,"byte_end":64652,"line_start":268,"line_end":268,"column_start":24,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64691,"byte_end":64713,"line_start":270,"line_end":270,"column_start":29,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64751,"byte_end":64766,"line_start":271,"line_end":271,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64807,"byte_end":64827,"line_start":273,"line_end":273,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":65072,"byte_end":65094,"line_start":282,"line_end":282,"column_start":31,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":65347,"byte_end":65362,"line_start":291,"line_end":291,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":65646,"byte_end":65655,"line_start":300,"line_end":300,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66431,"byte_end":66440,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67858,"byte_end":67867,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69391,"byte_end":69400,"line_start":383,"line_end":383,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72917,"byte_end":72926,"line_start":63,"line_end":63,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74563,"byte_end":74572,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74794,"byte_end":74803,"line_start":118,"line_end":118,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74932,"byte_end":74941,"line_start":124,"line_end":124,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":75668,"byte_end":75677,"line_start":149,"line_end":149,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83373,"byte_end":83382,"line_start":390,"line_end":390,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":94110,"byte_end":94119,"line_start":713,"line_end":713,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":94404,"byte_end":94413,"line_start":726,"line_end":726,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":95762,"byte_end":95771,"line_start":768,"line_end":768,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":95925,"byte_end":95934,"line_start":775,"line_end":775,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97255,"byte_end":97262,"line_start":812,"line_end":812,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104553,"byte_end":104562,"line_start":1028,"line_end":1028,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104695,"byte_end":104704,"line_start":1035,"line_end":1035,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104832,"byte_end":104841,"line_start":1042,"line_end":1042,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104974,"byte_end":104983,"line_start":1049,"line_end":1049,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":105110,"byte_end":105117,"line_start":1056,"line_end":1056,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107868,"byte_end":107882,"line_start":1132,"line_end":1132,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108104,"byte_end":108118,"line_start":1142,"line_end":1142,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108247,"byte_end":108261,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108678,"byte_end":108692,"line_start":1161,"line_end":1161,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115958,"byte_end":115964,"line_start":1377,"line_end":1377,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":117148,"byte_end":117154,"line_start":1414,"line_end":1414,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":117375,"byte_end":117381,"line_start":1423,"line_end":1423,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":117923,"byte_end":117929,"line_start":1446,"line_end":1446,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":118667,"byte_end":118685,"line_start":1467,"line_end":1467,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":118928,"byte_end":118946,"line_start":1475,"line_end":1475,"column_start":28,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":118985,"byte_end":118990,"line_start":1477,"line_end":1477,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":120341,"byte_end":120355,"line_start":1521,"line_end":1521,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":120665,"byte_end":120679,"line_start":1533,"line_end":1533,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":120814,"byte_end":120828,"line_start":1540,"line_end":1540,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159824,"byte_end":159836,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161207,"byte_end":161219,"line_start":93,"line_end":93,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161559,"byte_end":161571,"line_start":104,"line_end":104,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161652,"byte_end":161664,"line_start":110,"line_end":110,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186658,"byte_end":186677,"line_start":23,"line_end":23,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186805,"byte_end":186824,"line_start":29,"line_end":29,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187000,"byte_end":187019,"line_start":38,"line_end":38,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187148,"byte_end":187167,"line_start":45,"line_end":45,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187260,"byte_end":187279,"line_start":52,"line_end":52,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187404,"byte_end":187423,"line_start":61,"line_end":61,"column_start":13,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187450,"byte_end":187469,"line_start":63,"line_end":63,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187832,"byte_end":187851,"line_start":83,"line_end":83,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189702,"byte_end":189710,"line_start":151,"line_end":151,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":190220,"byte_end":190228,"line_start":170,"line_end":170,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":191340,"byte_end":191348,"line_start":204,"line_end":204,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":191392,"byte_end":191400,"line_start":206,"line_end":206,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":191438,"byte_end":191446,"line_start":208,"line_end":208,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169054,"byte_end":169063,"line_start":26,"line_end":26,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169191,"byte_end":169200,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169352,"byte_end":169361,"line_start":39,"line_end":39,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169637,"byte_end":169646,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":175048,"byte_end":175057,"line_start":198,"line_end":198,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":175340,"byte_end":175349,"line_start":211,"line_end":211,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":176441,"byte_end":176450,"line_start":247,"line_end":247,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182376,"byte_end":182385,"line_start":368,"line_end":368,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194577,"byte_end":194583,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":197284,"byte_end":197290,"line_start":113,"line_end":113,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":197742,"byte_end":197757,"line_start":129,"line_end":129,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":198003,"byte_end":198018,"line_start":137,"line_end":137,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":199509,"byte_end":199518,"line_start":49,"line_end":49,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":199706,"byte_end":199715,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":199844,"byte_end":199853,"line_start":64,"line_end":64,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":200257,"byte_end":200266,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":201131,"byte_end":201140,"line_start":100,"line_end":100,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205040,"byte_end":205049,"line_start":215,"line_end":215,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205961,"byte_end":205970,"line_start":252,"line_end":252,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":10741,"byte_end":10748,"line_start":265,"line_end":265,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":12403,"byte_end":12410,"line_start":306,"line_end":306,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":12580,"byte_end":12587,"line_start":313,"line_end":313,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":12781,"byte_end":12788,"line_start":322,"line_end":322,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13784,"byte_end":13789,"line_start":356,"line_end":356,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":14916,"byte_end":14921,"line_start":378,"line_end":378,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":15850,"byte_end":15859,"line_start":405,"line_end":405,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":15996,"byte_end":16005,"line_start":407,"line_end":407,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16044,"byte_end":16053,"line_start":409,"line_end":409,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16143,"byte_end":16152,"line_start":413,"line_end":413,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16187,"byte_end":16196,"line_start":415,"line_end":415,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16415,"byte_end":16424,"line_start":424,"line_end":424,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16591,"byte_end":16600,"line_start":430,"line_end":430,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":18874,"byte_end":18883,"line_start":479,"line_end":479,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7755,"byte_end":7764,"line_start":177,"line_end":177,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":432}},{"kind":"Mod","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7774,"byte_end":7778,"line_start":178,"line_end":178,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":452}},{"kind":"Mod","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7788,"byte_end":7793,"line_start":179,"line_end":179,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":516}},{"kind":"Mod","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":168598,"byte_end":168618,"line_start":8,"line_end":8,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":558}},{"kind":"Mod","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7803,"byte_end":7809,"line_start":180,"line_end":180,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":672}},{"kind":"Mod","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":7819,"byte_end":7826,"line_start":181,"line_end":181,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":701}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50248,"byte_end":50261,"line_start":90,"line_end":90,"column_start":21,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50605,"byte_end":50618,"line_start":101,"line_end":101,"column_start":23,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":50798,"byte_end":50807,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":51982,"byte_end":51989,"line_start":144,"line_end":144,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/secret.rs","byte_start":53176,"byte_end":53188,"line_start":180,"line_end":180,"column_start":6,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":56962,"byte_end":56968,"line_start":64,"line_end":64,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":81},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57344,"byte_end":57351,"line_start":74,"line_end":74,"column_start":20,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":73},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":57474,"byte_end":57481,"line_start":77,"line_end":77,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":73},"to":{"krate":0,"index":78}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58270,"byte_end":58285,"line_start":101,"line_end":101,"column_start":27,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58321,"byte_end":58343,"line_start":102,"line_end":102,"column_start":27,"column_end":49},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58379,"byte_end":58399,"line_start":103,"line_end":103,"column_start":27,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":902},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58755,"byte_end":58763,"line_start":117,"line_end":117,"column_start":30,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":998},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58796,"byte_end":58799,"line_start":118,"line_end":118,"column_start":30,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1036},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":58832,"byte_end":58842,"line_start":119,"line_end":119,"column_start":30,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1017},"to":{"krate":0,"index":81}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59630,"byte_end":59638,"line_start":138,"line_end":138,"column_start":22,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":998},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59663,"byte_end":59666,"line_start":139,"line_end":139,"column_start":22,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1036},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59697,"byte_end":59707,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1017},"to":{"krate":0,"index":78}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59737,"byte_end":59740,"line_start":142,"line_end":142,"column_start":27,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1036},"to":{"krate":0,"index":78}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":59773,"byte_end":59781,"line_start":144,"line_end":144,"column_start":29,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":998},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60126,"byte_end":60136,"line_start":154,"line_end":154,"column_start":29,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1017},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60488,"byte_end":60491,"line_start":164,"line_end":164,"column_start":29,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1036},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":60843,"byte_end":60852,"line_start":174,"line_end":174,"column_start":22,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62536,"byte_end":62545,"line_start":214,"line_end":214,"column_start":10,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":62972,"byte_end":62981,"line_start":225,"line_end":225,"column_start":10,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63439,"byte_end":63448,"line_start":236,"line_end":236,"column_start":10,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":63932,"byte_end":63941,"line_start":247,"line_end":247,"column_start":22,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64052,"byte_end":64061,"line_start":253,"line_end":253,"column_start":32,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64584,"byte_end":64604,"line_start":267,"line_end":267,"column_start":24,"column_end":44},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":902},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64637,"byte_end":64652,"line_start":268,"line_end":268,"column_start":24,"column_end":39},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64691,"byte_end":64713,"line_start":270,"line_end":270,"column_start":29,"column_end":51},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":78}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64751,"byte_end":64766,"line_start":271,"line_end":271,"column_start":29,"column_end":44},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":78}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":64807,"byte_end":64827,"line_start":273,"line_end":273,"column_start":31,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":902},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":65072,"byte_end":65094,"line_start":282,"line_end":282,"column_start":31,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":934},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":65347,"byte_end":65362,"line_start":291,"line_end":291,"column_start":31,"column_end":46},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":966},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":65646,"byte_end":65655,"line_start":300,"line_end":300,"column_start":31,"column_end":40},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":66431,"byte_end":66440,"line_start":321,"line_end":321,"column_start":12,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":67858,"byte_end":67867,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/context.rs","byte_start":69391,"byte_end":69400,"line_start":383,"line_end":383,"column_start":12,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":72917,"byte_end":72926,"line_start":63,"line_end":63,"column_start":23,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":12197}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74563,"byte_end":74572,"line_start":108,"line_end":108,"column_start":24,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":9617}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74794,"byte_end":74803,"line_start":118,"line_end":118,"column_start":23,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":74932,"byte_end":74941,"line_start":124,"line_end":124,"column_start":23,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":12197}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":75668,"byte_end":75677,"line_start":149,"line_end":149,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":83373,"byte_end":83382,"line_start":390,"line_end":390,"column_start":6,"column_end":15},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":94110,"byte_end":94119,"line_start":713,"line_end":713,"column_start":15,"column_end":24},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1102},"to":{"krate":18,"index":163}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":94404,"byte_end":94413,"line_start":726,"line_end":726,"column_start":31,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":95762,"byte_end":95771,"line_start":768,"line_end":768,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":95925,"byte_end":95934,"line_start":775,"line_end":775,"column_start":14,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":97255,"byte_end":97262,"line_start":812,"line_end":812,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104553,"byte_end":104562,"line_start":1028,"line_end":1028,"column_start":24,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104695,"byte_end":104704,"line_start":1035,"line_end":1035,"column_start":32,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104832,"byte_end":104841,"line_start":1042,"line_end":1042,"column_start":24,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":104974,"byte_end":104983,"line_start":1049,"line_end":1049,"column_start":32,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1102},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":105110,"byte_end":105117,"line_start":1056,"line_end":1056,"column_start":23,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":12197}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":107868,"byte_end":107882,"line_start":1132,"line_end":1132,"column_start":24,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1146},"to":{"krate":2,"index":9617}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108104,"byte_end":108118,"line_start":1142,"line_end":1142,"column_start":23,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1146},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108247,"byte_end":108261,"line_start":1148,"line_end":1148,"column_start":23,"column_end":37},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1146},"to":{"krate":2,"index":12197}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":108678,"byte_end":108692,"line_start":1161,"line_end":1161,"column_start":6,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":115958,"byte_end":115964,"line_start":1377,"line_end":1377,"column_start":6,"column_end":12},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":117148,"byte_end":117154,"line_start":1414,"line_end":1414,"column_start":23,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":2937}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":117375,"byte_end":117381,"line_start":1423,"line_end":1423,"column_start":22,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":2937}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":117923,"byte_end":117929,"line_start":1446,"line_end":1446,"column_start":17,"column_end":23},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1168},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":118667,"byte_end":118685,"line_start":1467,"line_end":1467,"column_start":23,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1193},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":118928,"byte_end":118946,"line_start":1475,"line_end":1475,"column_start":28,"column_end":46},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1193},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":118985,"byte_end":118990,"line_start":1477,"line_end":1477,"column_start":35,"column_end":40},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1395},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":120341,"byte_end":120355,"line_start":1521,"line_end":1521,"column_start":15,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1146},"to":{"krate":18,"index":163}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":120665,"byte_end":120679,"line_start":1533,"line_end":1533,"column_start":36,"column_end":50},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1146},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/key.rs","byte_start":120814,"byte_end":120828,"line_start":1540,"line_end":1540,"column_start":26,"column_end":40},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1146},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":159824,"byte_end":159836,"line_start":48,"line_end":48,"column_start":6,"column_end":18},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161207,"byte_end":161219,"line_start":93,"line_end":93,"column_start":23,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":12197}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161559,"byte_end":161571,"line_start":104,"line_end":104,"column_start":23,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdh.rs","byte_start":161652,"byte_end":161664,"line_start":110,"line_end":110,"column_start":22,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186658,"byte_end":186677,"line_start":23,"line_end":23,"column_start":21,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":186805,"byte_end":186824,"line_start":29,"line_end":29,"column_start":23,"column_end":42},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187000,"byte_end":187019,"line_start":38,"line_end":38,"column_start":20,"column_end":39},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187148,"byte_end":187167,"line_start":45,"line_end":45,"column_start":22,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187260,"byte_end":187279,"line_start":52,"line_end":52,"column_start":21,"column_end":40},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187404,"byte_end":187423,"line_start":61,"line_end":61,"column_start":13,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187450,"byte_end":187469,"line_start":63,"line_end":63,"column_start":23,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":7722}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":187832,"byte_end":187851,"line_start":83,"line_end":83,"column_start":6,"column_end":25},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":189702,"byte_end":189710,"line_start":151,"line_end":151,"column_start":10,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":190220,"byte_end":190228,"line_start":170,"line_end":170,"column_start":23,"column_end":31},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":7914}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":191340,"byte_end":191348,"line_start":204,"line_end":204,"column_start":32,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":7791}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":191392,"byte_end":191400,"line_start":206,"line_end":206,"column_start":40,"column_end":48},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":8187}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/serialized_signature.rs","byte_start":191438,"byte_end":191446,"line_start":208,"line_end":208,"column_start":34,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1252},"to":{"krate":2,"index":7766}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169054,"byte_end":169063,"line_start":26,"line_end":26,"column_start":21,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169191,"byte_end":169200,"line_start":32,"line_end":32,"column_start":23,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169352,"byte_end":169361,"line_start":39,"line_end":39,"column_start":23,"column_end":32},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":12197}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":169637,"byte_end":169646,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":175048,"byte_end":175057,"line_start":198,"line_end":198,"column_start":15,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1259},"to":{"krate":18,"index":163}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":175340,"byte_end":175349,"line_start":211,"line_end":211,"column_start":31,"column_end":40},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":176441,"byte_end":176450,"line_start":247,"line_end":247,"column_start":18,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/ecdsa/mod.rs","byte_start":182376,"byte_end":182385,"line_start":368,"line_end":368,"column_start":23,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":194577,"byte_end":194583,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":197284,"byte_end":197290,"line_start":113,"line_end":113,"column_start":33,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1275},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":197742,"byte_end":197757,"line_start":129,"line_end":129,"column_start":23,"column_end":38},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1295},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/scalar.rs","byte_start":198003,"byte_end":198018,"line_start":137,"line_end":137,"column_start":28,"column_end":43},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1295},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":199509,"byte_end":199518,"line_start":49,"line_end":49,"column_start":24,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":751},"to":{"krate":2,"index":9617}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":199706,"byte_end":199715,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":751},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":199844,"byte_end":199853,"line_start":64,"line_end":64,"column_start":23,"column_end":32},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":751},"to":{"krate":2,"index":12197}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":200257,"byte_end":200266,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":751},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":201131,"byte_end":201140,"line_start":100,"line_end":100,"column_start":18,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205040,"byte_end":205049,"line_start":215,"line_end":215,"column_start":23,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/schnorr.rs","byte_start":205961,"byte_end":205970,"line_start":252,"line_end":252,"column_start":19,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":10741,"byte_end":10748,"line_start":265,"line_end":265,"column_start":6,"column_end":13},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":12403,"byte_end":12410,"line_start":306,"line_end":306,"column_start":40,"column_end":47},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":12580,"byte_end":12587,"line_start":313,"line_end":313,"column_start":24,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":9617}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":12781,"byte_end":12788,"line_start":322,"line_end":322,"column_start":23,"column_end":30},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":828},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":13784,"byte_end":13789,"line_start":356,"line_end":356,"column_start":23,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1395},"to":{"krate":2,"index":9611}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":14916,"byte_end":14921,"line_start":378,"line_end":378,"column_start":28,"column_end":33},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1395},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":15850,"byte_end":15859,"line_start":405,"line_end":405,"column_start":34,"column_end":43},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":15996,"byte_end":16005,"line_start":407,"line_end":407,"column_start":34,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16044,"byte_end":16053,"line_start":409,"line_end":409,"column_start":32,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16143,"byte_end":16152,"line_start":413,"line_end":413,"column_start":25,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16187,"byte_end":16196,"line_start":415,"line_end":415,"column_start":27,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16415,"byte_end":16424,"line_start":424,"line_end":424,"column_start":33,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":16591,"byte_end":16600,"line_start":430,"line_end":430,"column_start":18,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.24.0/src/lib.rs","byte_start":18874,"byte_end":18883,"line_start":479,"line_end":479,"column_start":18,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}}]}