{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4","program":"/Users/annamouland/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","vrf","--edition=2018","/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=2ec61ce89389879e","-C","extra-filename=-2ec61ce89389879e","--out-dir","/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps","-L","dependency=/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps","--extern","failure=/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps/libfailure-b3cfa3e3267c511f.rmeta","--extern","hmac_sha256=/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps/libhmac_sha256-8f6a6f7d2514f1bb.rmeta","--extern","openssl=/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps/libopenssl-e0b55faf324ee712.rmeta","--cap-lints","allow","-L","native=/opt/homebrew/opt/openssl@1.1/lib","--error-format=json","--sysroot","/Users/annamouland/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/annamouland/Documents/Work/VRRB/vrrb_vrf/target/rls/debug/deps/libvrf-2ec61ce89389879e.rmeta"},"prelude":{"crate_id":{"name":"vrf","disambiguator":[15507103909123303811,0]},"crate_root":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src","external_crates":[{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9602236740471282608,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16249227214258238047,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13791225915815425008,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[455111089362928276,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[740641686899810413,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1452182208797737205,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4474361821197688885,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11146593528668201643,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7026141623111916022,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11096207044195207047,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[16946906222655600942,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[9670608472714711915,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[3075685271658393714,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[7553277853646633394,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[5387634511767759158,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[10401181353817371068,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[14296571408058143832,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":18,"id":{"name":"failure","disambiguator":[9528607315162689062,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":19,"id":{"name":"failure_derive","disambiguator":[9765089741892999473,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":20,"id":{"name":"backtrace","disambiguator":[1040942100404914889,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":21,"id":{"name":"rustc_demangle","disambiguator":[18064903648624545889,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":22,"id":{"name":"cfg_if","disambiguator":[13037983282529128945,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":23,"id":{"name":"addr2line","disambiguator":[11301473247216055972,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":24,"id":{"name":"gimli","disambiguator":[16747547061545470854,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":25,"id":{"name":"libc","disambiguator":[344410210099135926,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":26,"id":{"name":"object","disambiguator":[12000221333169850693,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","num":27,"id":{"name":"memchr","disambiguator":[16141243948802395882,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","num":28,"id":{"name":"hmac_sha256","disambiguator":[11545992562178399984,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","num":29,"id":{"name":"openssl","disambiguator":[4406272780539972144,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","num":30,"id":{"name":"openssl_sys","disambiguator":[14276804471019681748,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","num":31,"id":{"name":"foreign_types","disambiguator":[12844442794066947575,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","num":32,"id":{"name":"foreign_types_shared","disambiguator":[6625946044527849768,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","num":33,"id":{"name":"openssl_macros","disambiguator":[2948127872656625615,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","num":34,"id":{"name":"bitflags","disambiguator":[5221822649502070792,0]}},{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","num":35,"id":{"name":"once_cell","disambiguator":[8738526842467616500,0]}}],"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":0,"byte_end":1854,"line_start":1,"line_end":49,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":0,"byte_end":1854,"line_start":1,"line_end":49,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":25},{"krate":0,"index":143}],"decl_id":null,"docs":" # Verifiable Random Function (VRF)","sig":null,"attributes":[{"value":"/ # Verifiable Random Function (VRF)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":0,"byte_end":38,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":39,"byte_end":42,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate defines the generic contract that must be followed by VRF implementations ([`VRF`](trait.VRF.html) trait).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":43,"byte_end":164,"line_start":3,"line_end":3,"column_start":1,"column_end":122}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":165,"byte_end":168,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ## Elliptic Curve VRF","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":169,"byte_end":194,"line_start":5,"line_end":5,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":195,"byte_end":198,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The [`openssl`](openssl/index.html) module provides an implementation of Elliptic Curve VRF ([`ECVRF`](openssl/struct.ECVRF.html)).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":199,"byte_end":334,"line_start":7,"line_end":7,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":335,"byte_end":338,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ It follows the algorithms described in:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":339,"byte_end":382,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":383,"byte_end":386,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * [VRF-draft-05](https://tools.ietf.org/pdf/draft-irtf-cfrg-vrf-05)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":387,"byte_end":458,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ * [RFC6979](https://tools.ietf.org/html/rfc6979)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":459,"byte_end":511,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":512,"byte_end":515,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently the supported cipher suites are:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":516,"byte_end":562,"line_start":14,"line_end":14,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":563,"byte_end":566,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `P256_SHA256_TAI`: the aforementioned algorithms with `SHA256` and the `NIST P-256` curve.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":567,"byte_end":663,"line_start":16,"line_end":16,"column_start":1,"column_end":97}},{"value":"/ * `K163_SHA256_TAI`: the aforementioned algorithms with `SHA256` and the `NIST K-163` curve.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":664,"byte_end":760,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/ * `SECP256K1_SHA256_TAI`: the aforementioned algorithms with `SHA256` and the `secp256k1` curve.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":761,"byte_end":861,"line_start":18,"line_end":18,"column_start":1,"column_end":101}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dummy","qualname":"::dummy","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20}],"decl_id":null,"docs":" Sample module implementing a __dummy__ (to be used as example) Verifiable Random Function (VRF)\n","sig":null,"attributes":[{"value":"/ Sample module implementing a __dummy__ (to be used as example) Verifiable Random Function (VRF)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":1856,"byte_end":1955,"line_start":1,"line_end":1,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":10},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2004,"byte_end":2012,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"DummyVRF","qualname":"::dummy::DummyVRF","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2065,"byte_end":2080,"line_start":8,"line_end":8,"column_start":11,"column_end":26},"name":"SECRET_KEY_SIZE","qualname":"::dummy::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a secret key\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a secret key","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2015,"byte_end":2054,"line_start":7,"line_end":7,"column_start":1,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":13},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2157,"byte_end":2172,"line_start":11,"line_end":11,"column_start":11,"column_end":26},"name":"PUBLIC_KEY_SIZE","qualname":"::dummy::PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a serialized public key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a serialized public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2095,"byte_end":2146,"line_start":10,"line_end":10,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2227,"byte_end":2236,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"SecretKey","qualname":"::dummy::SecretKey","value":"&'a [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The type of the secret key\n","sig":null,"attributes":[{"value":"/ The type of the secret key","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2187,"byte_end":2217,"line_start":13,"line_end":13,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2311,"byte_end":2320,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::dummy::PublicKey","value":"&'a [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The type of the public key\n","sig":null,"attributes":[{"value":"/ The type of the public key","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2271,"byte_end":2301,"line_start":16,"line_end":16,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"openssl","qualname":"::openssl","value":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":149},{"krate":0,"index":156},{"krate":0,"index":107},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":166},{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":139}],"decl_id":null,"docs":" Module that uses the OpenSSL library to offer Elliptic Curve Verifiable Random Function (VRF) functionality.\n This module follows the algorithms described in [VRF-draft-05](https://tools.ietf.org/pdf/draft-irtf-cfrg-vrf-05) and [RFC6979](https://tools.ietf.org/html/rfc6979).","sig":null,"attributes":[{"value":"/ Module that uses the OpenSSL library to offer Elliptic Curve Verifiable Random Function (VRF) functionality.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3212,"byte_end":3324,"line_start":1,"line_end":1,"column_start":1,"column_end":113}},{"value":"/ This module follows the algorithms described in [VRF-draft-05](https://tools.ietf.org/pdf/draft-irtf-cfrg-vrf-05) and [RFC6979](https://tools.ietf.org/html/rfc6979).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3325,"byte_end":3494,"line_start":2,"line_end":2,"column_start":1,"column_end":170}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3495,"byte_end":3498,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ In particular, it provides:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3499,"byte_end":3530,"line_start":4,"line_end":4,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3531,"byte_end":3534,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `ECVRF_hash_to_curve` as in the `ECVRF_hash_to_curve_try_and_increment` algorithm from [VRF-draft-05](https://tools.ietf.org/pdf/draft-irtf-cfrg-vrf-05)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3535,"byte_end":3693,"line_start":6,"line_end":6,"column_start":1,"column_end":159}},{"value":"/ * `ECVRF_nonce_generation` as specified in Section 3.2 of [RFC6979](https://tools.ietf.org/html/rfc6979)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3694,"byte_end":3802,"line_start":7,"line_end":7,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3803,"byte_end":3806,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Warning: if input data is private, information leaks in the form of timing side channels are possible.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3807,"byte_end":3913,"line_start":9,"line_end":9,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3914,"byte_end":3917,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Currently the supported cipher suites are:","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3918,"byte_end":3964,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/ * _P256_SHA256_TAI_: the aforementioned algorithms with `SHA256` and the `NIST P-256` curve.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":3965,"byte_end":4061,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ * _K163_SHA256_TAI_: the aforementioned algorithms with `SHA256` and the `NIST K-163` curve.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4062,"byte_end":4158,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ * _SECP256K1_SHA256_TAI_: the aforementioned algorithms with `SHA256` and the `secp256k1` curve.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4159,"byte_end":4259,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4260,"byte_end":4263,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ## Documentation","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4264,"byte_end":4284,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4285,"byte_end":4288,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * [VRF-draft-05](https://tools.ietf.org/pdf/draft-irtf-cfrg-vrf-05)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4289,"byte_end":4360,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ * [RFC6979](https://tools.ietf.org/html/rfc6979)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4361,"byte_end":4413,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/ * [GitHub repository](https://github.com/witnet/vrf-rs)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4414,"byte_end":4473,"line_start":20,"line_end":20,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4474,"byte_end":4477,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/  ## Features","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4478,"byte_end":4494,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4495,"byte_end":4498,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ * Compute VRF proof","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4499,"byte_end":4522,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ * Verify VRF proof","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4523,"byte_end":4545,"line_start":25,"line_end":25,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":150},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5148,"byte_end":5163,"line_start":54,"line_end":54,"column_start":5,"column_end":20},"name":"P256_SHA256_TAI","qualname":"::openssl::CipherSuite::P256_SHA256_TAI","value":"CipherSuite::P256_SHA256_TAI","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" `NIST P-256` with `SHA256` and `ECVRF_hash_to_curve_try_and_increment`\n","sig":null,"attributes":[{"value":"/ `NIST P-256` with `SHA256` and `ECVRF_hash_to_curve_try_and_increment`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5069,"byte_end":5143,"line_start":53,"line_end":53,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":152},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5247,"byte_end":5267,"line_start":56,"line_end":56,"column_start":5,"column_end":25},"name":"SECP256K1_SHA256_TAI","qualname":"::openssl::CipherSuite::SECP256K1_SHA256_TAI","value":"CipherSuite::SECP256K1_SHA256_TAI","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" `Secp256k1` with `SHA256` and `ECVRF_hash_to_curve_try_and_increment`\n","sig":null,"attributes":[{"value":"/ `Secp256k1` with `SHA256` and `ECVRF_hash_to_curve_try_and_increment`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5169,"byte_end":5242,"line_start":55,"line_end":55,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":154},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5352,"byte_end":5367,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"name":"K163_SHA256_TAI","qualname":"::openssl::CipherSuite::K163_SHA256_TAI","value":"CipherSuite::K163_SHA256_TAI","parent":{"krate":0,"index":149},"children":[],"decl_id":null,"docs":" `NIST K-163` with `SHA256` and `ECVRF_hash_to_curve_try_and_increment`\n","sig":null,"attributes":[{"value":"/ `NIST K-163` with `SHA256` and `ECVRF_hash_to_curve_try_and_increment`","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5273,"byte_end":5347,"line_start":57,"line_end":57,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":149},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5051,"byte_end":5062,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"name":"CipherSuite","qualname":"::openssl::CipherSuite","value":"pub enum CipherSuite {\n    P256_SHA256_TAI,\n    SECP256K1_SHA256_TAI,\n    K163_SHA256_TAI,\n}","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154}],"decl_id":null,"docs":" Different cipher suites for different curves/algorithms\n","sig":null,"attributes":[{"value":"/ Different cipher suites for different curves/algorithms","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4934,"byte_end":4993,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":4994,"byte_end":5024,"line_start":50,"line_end":50,"column_start":1,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":169},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5860,"byte_end":5870,"line_start":76,"line_end":76,"column_start":5,"column_end":15},"name":"CodedError","qualname":"::openssl::Error::CodedError","value":"Error::CodedError { code }","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Error raised from `openssl::error::ErrorStack` with a specific code\n","sig":null,"attributes":[{"value":"/ Error raised from `openssl::error::ErrorStack` with a specific code","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5734,"byte_end":5805,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"fail(display = \"Error with code {}\", code)","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5810,"byte_end":5855,"line_start":75,"line_end":75,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":171},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6039,"byte_end":6055,"line_start":79,"line_end":79,"column_start":5,"column_end":21},"name":"HashToPointError","qualname":"::openssl::Error::HashToPointError","value":"Error::HashToPointError","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" The `hash_to_point()` function could not find a valid point\n","sig":null,"attributes":[{"value":"/ The `hash_to_point()` function could not find a valid point","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5894,"byte_end":5957,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"fail(display = \"Hash to point function could not find a valid point\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5962,"byte_end":6034,"line_start":78,"line_end":78,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":173},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6150,"byte_end":6165,"line_start":82,"line_end":82,"column_start":5,"column_end":20},"name":"InvalidPiLength","qualname":"::openssl::Error::InvalidPiLength","value":"Error::InvalidPiLength","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" The proof length is invalid\n","sig":null,"attributes":[{"value":"/ The proof length is invalid","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6061,"byte_end":6092,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"fail(display = \"The proof length is invalid\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6097,"byte_end":6145,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":175},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6246,"byte_end":6258,"line_start":85,"line_end":85,"column_start":5,"column_end":17},"name":"InvalidProof","qualname":"::openssl::Error::InvalidProof","value":"Error::InvalidProof","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" The proof is invalid\n","sig":null,"attributes":[{"value":"/ The proof is invalid","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6171,"byte_end":6195,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"fail(display = \"The proof is invalid\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6200,"byte_end":6241,"line_start":84,"line_end":84,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":177},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6325,"byte_end":6332,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::openssl::Error::Unknown","value":"Error::Unknown","parent":{"krate":0,"index":158},"children":[],"decl_id":null,"docs":" Unknown error\n","sig":null,"attributes":[{"value":"/ Unknown error","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6264,"byte_end":6281,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"fail(display = \"Unknown error\")","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6286,"byte_end":6320,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":158},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5722,"byte_end":5727,"line_start":73,"line_end":73,"column_start":10,"column_end":15},"name":"Error","qualname":"::openssl::Error","value":"pub enum Error {\n    CodedError {\n            code: c_ulong,\n        },\n    HashToPointError,\n    InvalidPiLength,\n    InvalidProof,\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177}],"decl_id":null,"docs":" Different errors that can be raised when proving/verifying VRFs\n","sig":null,"attributes":[{"value":"/ Different errors that can be raised when proving/verifying VRFs","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5622,"byte_end":5689,"line_start":71,"line_end":71,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6731,"byte_end":6736,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"ECVRF","qualname":"::openssl::ECVRF","value":"ECVRF {  }","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" An Elliptic Curve VRF\n","sig":null,"attributes":[{"value":"/ An Elliptic Curve VRF","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6694,"byte_end":6719,"line_start":101,"line_end":101,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7916,"byte_end":7926,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"from_suite","qualname":"<ECVRF>::from_suite","value":"pub fn from_suite(CipherSuite) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Factory method for creating a ECVRF structure with a context that is initialized for the provided cipher suite.","sig":null,"attributes":[{"value":"/ Factory method for creating a ECVRF structure with a context that is initialized for the provided cipher suite.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7605,"byte_end":7720,"line_start":134,"line_end":134,"column_start":5,"column_end":120}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7725,"byte_end":7728,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7733,"byte_end":7748,"line_start":136,"line_end":136,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7753,"byte_end":7756,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ * `suite` - A ciphersuite identifying the curve/algorithms.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7761,"byte_end":7824,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7829,"byte_end":7832,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7837,"byte_end":7850,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7855,"byte_end":7858,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ * If successful, the ECVRF structure.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7863,"byte_end":7904,"line_start":142,"line_end":142,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10225,"byte_end":10242,"line_start":208,"line_end":208,"column_start":12,"column_end":29},"name":"derive_public_key","qualname":"<ECVRF>::derive_public_key","value":"pub fn derive_public_key(&mut Self, &[u8]) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Function for deriving a public key given a secret key point.\n Returns a vector of octets with the corresponding public key.","sig":null,"attributes":[{"value":"/ Function for deriving a public key given a secret key point.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":9879,"byte_end":9943,"line_start":198,"line_end":198,"column_start":5,"column_end":69}},{"value":"/ Returns a vector of octets with the corresponding public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":9948,"byte_end":10013,"line_start":199,"line_end":199,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10018,"byte_end":10021,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10026,"byte_end":10041,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10046,"byte_end":10049,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ * `secret_key` - A `BigNum` referencing the secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10054,"byte_end":10113,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10118,"byte_end":10121,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10126,"byte_end":10139,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10144,"byte_end":10147,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ * If successful, a `Vec<u8>` representing the public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":10152,"byte_end":10213,"line_start":207,"line_end":207,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":19176,"byte_end":19189,"line_start":462,"line_end":462,"column_start":12,"column_end":25},"name":"proof_to_hash","qualname":"<ECVRF>::proof_to_hash","value":"pub fn proof_to_hash(&mut Self, &[u8]) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Computes the VRF hash output as result of the digest of a ciphersuite-dependent prefix\n concatenated with the gamma point ([VRF-draft-05](https://tools.ietf.org/pdf/draft-irtf-cfrg-vrf-05), section 5.2).","sig":null,"attributes":[{"value":"/ Computes the VRF hash output as result of the digest of a ciphersuite-dependent prefix","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":18746,"byte_end":18836,"line_start":452,"line_end":452,"column_start":5,"column_end":95}},{"value":"/ concatenated with the gamma point ([VRF-draft-05](https://tools.ietf.org/pdf/draft-irtf-cfrg-vrf-05), section 5.2).","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":18841,"byte_end":18960,"line_start":453,"line_end":453,"column_start":5,"column_end":124}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":18965,"byte_end":18968,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":18973,"byte_end":18988,"line_start":455,"line_end":455,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":18993,"byte_end":18996,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ * `pi`  - A slice representing the VRF proof in octets.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":19001,"byte_end":19060,"line_start":457,"line_end":457,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":19065,"byte_end":19068,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":19073,"byte_end":19086,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":19091,"byte_end":19094,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ * If successful, a vector of octets with the VRF hash output.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":19099,"byte_end":19164,"line_start":461,"line_end":461,"column_start":5,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":143},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1011,"byte_end":1014,"line_start":23,"line_end":23,"column_start":11,"column_end":14},"name":"VRF","qualname":"::VRF","value":"VRF<PublicKey, SecretKey>","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"decl_id":null,"docs":" A trait containing the common capabilities for all Verifiable Random Functions (VRF) implementations.\n","sig":null,"attributes":[{"value":"/ A trait containing the common capabilities for all Verifiable Random Functions (VRF) implementations.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":895,"byte_end":1000,"line_start":22,"line_end":22,"column_start":1,"column_end":106}}]},{"kind":"Type","id":{"krate":0,"index":146},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1048,"byte_end":1053,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Error","qualname":"::VRF::Error","value":"type Error;","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1367,"byte_end":1372,"line_start":36,"line_end":36,"column_start":8,"column_end":13},"name":"prove","qualname":"::VRF::prove","value":"pub fn prove(&mut Self, SecretKey, &[u8]) -> Result<Vec<u8>, Self::Error>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Generates proof from a secret key and a message.","sig":null,"attributes":[{"value":"/ Generates proof from a secret key and a message.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1060,"byte_end":1112,"line_start":26,"line_end":26,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1117,"byte_end":1120,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1125,"byte_end":1140,"line_start":28,"line_end":28,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1145,"byte_end":1148,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ * `x`     - A secret key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1153,"byte_end":1182,"line_start":30,"line_end":30,"column_start":5,"column_end":34}},{"value":"/ * `alpha` - A slice representing the message in octets.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1187,"byte_end":1246,"line_start":31,"line_end":31,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1251,"byte_end":1254,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1259,"byte_end":1272,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ * If successful, a vector of octets representing the proof of the VRF.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1285,"byte_end":1359,"line_start":35,"line_end":35,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1763,"byte_end":1769,"line_start":48,"line_end":48,"column_start":8,"column_end":14},"name":"verify","qualname":"::VRF::verify","value":"pub fn verify(&mut Self, PublicKey, &[u8], &[u8])\n-> Result<Vec<u8>, Self::Error>","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Verifies the provided VRF proof and computes the VRF hash output.","sig":null,"attributes":[{"value":"/ Verifies the provided VRF proof and computes the VRF hash output.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1450,"byte_end":1519,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1524,"byte_end":1527,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1532,"byte_end":1547,"line_start":40,"line_end":40,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1552,"byte_end":1555,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ * `y`   - A public key.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1560,"byte_end":1587,"line_start":42,"line_end":42,"column_start":5,"column_end":32}},{"value":"/ * `pi`  - A slice of octets representing the VRF proof.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1592,"byte_end":1651,"line_start":43,"line_end":43,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1656,"byte_end":1659,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1664,"byte_end":1677,"line_start":45,"line_end":45,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1682,"byte_end":1685,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ * If successful, a vector of octets with the VRF hash output.","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":1690,"byte_end":1755,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2402,"byte_end":2410,"line_start":19,"line_end":19,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5377,"byte_end":5388,"line_start":61,"line_end":61,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6363,"byte_end":6368,"line_start":91,"line_end":91,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7244,"byte_end":7249,"line_start":121,"line_end":121,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7593,"byte_end":7598,"line_start":133,"line_end":133,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":19441,"byte_end":19446,"line_start":470,"line_end":470,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":870,"byte_end":875,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/lib.rs","byte_start":885,"byte_end":892,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":25}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/dummy.rs","byte_start":2402,"byte_end":2410,"line_start":19,"line_end":19,"column_start":48,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":10},"to":{"krate":0,"index":143}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":5377,"byte_end":5388,"line_start":61,"line_end":61,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":6363,"byte_end":6368,"line_start":91,"line_end":91,"column_start":27,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":158},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7244,"byte_end":7249,"line_start":121,"line_end":121,"column_start":16,"column_end":21},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":7593,"byte_end":7598,"line_start":133,"line_end":133,"column_start":6,"column_end":11},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/annamouland/.cargo/registry/src/github.com-1ecc6299db9ec823/vrf-0.2.4/src/openssl/mod.rs","byte_start":19441,"byte_end":19446,"line_start":470,"line_end":470,"column_start":28,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":111},"to":{"krate":0,"index":143}}]}