// @generated by protoc-gen-es v1.2.0
// @generated from file node_read_service/v1/node_read_service.proto (package node_read_service.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message node_read_service.v1.FullStateSnapshotRequest
 */
export const FullStateSnapshotRequest = proto3.makeMessageType(
  "node_read_service.v1.FullStateSnapshotRequest",
  [],
);

/**
 * @generated from message node_read_service.v1.FullStateSnapshotResponse
 */
export const FullStateSnapshotResponse = proto3.makeMessageType(
  "node_read_service.v1.FullStateSnapshotResponse",
  () => [
    { no: 1, name: "full_state_snapshot", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: Account} },
  ],
);

/**
 * @generated from message node_read_service.v1.GetNodeTypeRequest
 */
export const GetNodeTypeRequest = proto3.makeMessageType(
  "node_read_service.v1.GetNodeTypeRequest",
  [],
);

/**
 * @generated from message node_read_service.v1.GetNodeTypeResponse
 */
export const GetNodeTypeResponse = proto3.makeMessageType(
  "node_read_service.v1.GetNodeTypeResponse",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "result", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message node_read_service.v1.GetFullMempoolRequest
 */
export const GetFullMempoolRequest = proto3.makeMessageType(
  "node_read_service.v1.GetFullMempoolRequest",
  [],
);

/**
 * @generated from message node_read_service.v1.GetFullMempoolResponse
 */
export const GetFullMempoolResponse = proto3.makeMessageType(
  "node_read_service.v1.GetFullMempoolResponse",
  () => [
    { no: 1, name: "transaction_records", kind: "message", T: TransactionRecord, repeated: true },
  ],
);

/**
 * @generated from message node_read_service.v1.GetTransactionRequest
 */
export const GetTransactionRequest = proto3.makeMessageType(
  "node_read_service.v1.GetTransactionRequest",
  () => [
    { no: 1, name: "rpc_transaction_digest", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message node_read_service.v1.GetTransactionResponse
 */
export const GetTransactionResponse = proto3.makeMessageType(
  "node_read_service.v1.GetTransactionResponse",
  () => [
    { no: 1, name: "transaction_record", kind: "message", T: TransactionRecord },
  ],
);

/**
 * @generated from message node_read_service.v1.ListTransactionsRequest
 */
export const ListTransactionsRequest = proto3.makeMessageType(
  "node_read_service.v1.ListTransactionsRequest",
  () => [
    { no: 1, name: "digests", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message node_read_service.v1.ListTransactionsResponse
 */
export const ListTransactionsResponse = proto3.makeMessageType(
  "node_read_service.v1.ListTransactionsResponse",
  () => [
    { no: 1, name: "transactions", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: TransactionRecord} },
  ],
);

/**
 * @generated from message node_read_service.v1.GetAccountRequest
 */
export const GetAccountRequest = proto3.makeMessageType(
  "node_read_service.v1.GetAccountRequest",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message node_read_service.v1.GetAccountResponse
 */
export const GetAccountResponse = proto3.makeMessageType(
  "node_read_service.v1.GetAccountResponse",
  () => [
    { no: 1, name: "account", kind: "message", T: Account },
  ],
);

/**
 * @generated from message node_read_service.v1.TransactionRecord
 */
export const TransactionRecord = proto3.makeMessageType(
  "node_read_service.v1.TransactionRecord",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "sender_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "sender_public_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "receiver_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "token", kind: "message", T: Token },
    { no: 7, name: "amount", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "validators", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 8 /* ScalarType.BOOL */} },
    { no: 10, name: "nonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message node_read_service.v1.Token
 */
export const Token = proto3.makeMessageType(
  "node_read_service.v1.Token",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "decimals", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message node_read_service.v1.Account
 */
export const Account = proto3.makeMessageType(
  "node_read_service.v1.Account",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_nonce", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 3, name: "credits", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "debits", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 5, name: "storage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "pubkey", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "digests", kind: "message", T: AccountDigests },
    { no: 9, name: "created_at", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 10, name: "updated_at", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * @generated from message node_read_service.v1.AccountDigests
 */
export const AccountDigests = proto3.makeMessageType(
  "node_read_service.v1.AccountDigests",
  () => [
    { no: 1, name: "sent", kind: "message", T: TransactionDigest },
    { no: 2, name: "recv", kind: "message", T: TransactionDigest },
    { no: 3, name: "stake", kind: "message", T: TransactionDigest },
  ],
);

/**
 * @generated from message node_read_service.v1.TransactionDigest
 */
export const TransactionDigest = proto3.makeMessageType(
  "node_read_service.v1.TransactionDigest",
  () => [
    { no: 1, name: "inner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "digest_string", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

