// @generated by protoc-gen-es v1.2.0
// @generated from file node/v1/node.proto (package node.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message node.v1.NodeTypeRequest
 */
export declare class NodeTypeRequest extends Message<NodeTypeRequest> {
  constructor(data?: PartialMessage<NodeTypeRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "node.v1.NodeTypeRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NodeTypeRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NodeTypeRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NodeTypeRequest;

  static equals(a: NodeTypeRequest | PlainMessage<NodeTypeRequest> | undefined, b: NodeTypeRequest | PlainMessage<NodeTypeRequest> | undefined): boolean;
}

/**
 * @generated from message node.v1.NodeTypeResponse
 */
export declare class NodeTypeResponse extends Message<NodeTypeResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string result = 2;
   */
  result: string;

  constructor(data?: PartialMessage<NodeTypeResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "node.v1.NodeTypeResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NodeTypeResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NodeTypeResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NodeTypeResponse;

  static equals(a: NodeTypeResponse | PlainMessage<NodeTypeResponse> | undefined, b: NodeTypeResponse | PlainMessage<NodeTypeResponse> | undefined): boolean;
}

